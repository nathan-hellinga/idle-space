{"version":3,"sources":["Components/controls/purchasable/purchasable.module.css","Components/colonyDisplays/assignments/assignments.module.css","Components/communications/communications.module.css","Components/controls/modal/modal.module.css","Pages/main/main.module.css","Components/controls/LaunchButton/launchPanel.module.css","Components/planetDisplay/planetDisplay.module.css","Components/story/firstPrestige/meetColony.module.css","Pages/colony/colony.module.css","Components/controls/pageSwitcher/pageSwitcher.module.css","GameData/FabObjects.js","GameData/ResearchObjects.js","GameData/colonyObjects.js","Redux/selectors.js","Util/FormatInt.js","Components/resourceDisplay/resourceDisplay.jsx","Components/planetDisplay/planetDisplay.jsx","Components/controls/purchasable/purchasable.jsx","Redux/actionTypes.js","Redux/actions.js","Util/FabricatePricingFunction.js","Components/fabricatePanel.jsx","Components/researchPanel.jsx","Util/CheckResearchUnlockable.js","Hooks/useShallowEqualSelector.js","Components/communications/communicationsPanel.jsx","Components/controls/modal/modal.jsx","Components/controls/LaunchButton/launchPanel.jsx","Hooks/useKeepPercent.js","Pages/main/main.jsx","Hooks/useInterval.js","Components/story/firstPrestige/meetColonyDialogPopup.jsx","Components/gameManager.jsx","Hooks/usePaused.js","Components/colonyDisplays/colonyOverview.jsx","Components/colonyDisplays/colonyResources.jsx","Components/colonyDisplays/colonyBuildingsPanel.jsx","Components/colonyDisplays/assignments/assignmentControl.jsx","Components/colonyDisplays/assignments/colonyAssignmentsPanel.jsx","Pages/colony/Colony.jsx","Components/controls/pageSwitcher/pageSwitcher.jsx","App.js","reportWebVitals.js","Redux/reducers/resources.js","Redux/reducers/sources.js","Redux/reducers/upgrades.js","Redux/reducers/communications.js","Redux/reducers/game.js","Redux/reducers/colony.js","Redux/reducers/index.js","Redux/store.js","Theme/darkTheme.js","index.js"],"names":["module","exports","fabObjects","spaceNet","title","subtitle","basePrice","costMultiFactor","baseIncome","message","drone","probe","lander","miningRig","droneFactory","launchFacility","spaceElevator","ResearchObjects","id","multiplier","fabType","dependencies","colonyObjects","hydroponics","workers","inputs","outputs","name","numerator","denominator","medic","engineer","cook","getResources","store","resources","current","getIncomeSources","sources","getSourceCurrentIncomes","incomes","Object","entries","sourceType","count","fabDetails","upgrades","upgradeId","upgrade","find","x","getIncomePerSecond","total","getResearched","getColonyResources","resourcesCopy","colony","key","value","Math","floor","getColonyResourcesPerSecond","loop","assignments","details","incomesCopy","input","inputRate","output","outputRate","getColonistAssignments","listenCommunications","communications","slice","reverse","formatInt","number","toFixed","replace","ResourceDisplay","useSelector","incomePerSecond","style","textAlign","marginBottom","FormatInt","marginTop","opacity","float","clear","PlanetDisplay","className","classes","planetDisplay","width","Purchasable","altText","owned","price","onPurchase","disabled","purchasable","ButtonBase","onClick","innerWrapper","join","content","content2","marginLeft","min","RESET","INCREASE_RESOURCES","DECREASE_RESOURCES","ADD_INCOME_SOURCE","BUY_UPGRADE","ADD_MESSAGE","RECEIVE_MESSAGE","CLEAR_MESSAGES","TOGGLE_PAUSE","PRESTIGE","CLOSE_STORY","ADD_BUILDING","ADD_COLONIST","INCREASE_COLONY_RESOURCE","DECREASE_COLONY_RESOURCE","ASSIGN_COLONIST","UN_ASSIGN_COLONIST","addMessage","delay","type","payload","addColonist","assignColonist","fabricatePricingFunction","fabItem","pow","FabricatePanel","dispatch","useDispatch","currentIncomeSources","prestige","state","game","mapObject","map","Grid","container","spacing","index","item","xs","FabricatePricingFunction","addIncomeSource","ResearchPanel","researched","purchasedUpgrades","incomeSources","some","dependency","CheckResearchUnlockable","multi","buyUpgrade","useShallowEqualSelector","selector","shallowEqual","CommunicationsPanel","messages","formatMsg","msg","startsWith","substring","isImportant","wrapper","direction","received","priorityMessage","dangerouslySetInnerHTML","__html","startDelay","onTypingDone","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","Modal","open","actions","children","backdrop","length","action","Button","variant","color","label","LaunchPanel","num","launchFacilityCount","currentPrestige","keepPercent","useState","factor","setFactor","elevatorCount","eq","useEffect","useKeepPercent","launchConfirmation","setLaunchConfirmation","launchConfirmActions","display","flexDirection","alignItems","launchText","subtext","fullWidth","Divider","backgroundColor","margin","Main","openTab","setOpenTab","height","sm","md","sidePanel","overflow","ButtonGroup","useInterval","callback","savedCallback","useRef","last","performance","now","init","setInterval","time","delta","clearInterval","MeetColonyDialogPopup","storyShow","meetColony","setDoneTyping","typistWrapper","fontSize","Delay","ms","GameManager","colonyIncomes","population","colonyResources","building","buildings","paused","goneHungry","setGoneHungry","reduce","a","increases","console","log","foodRequired","wellFed","food","biomass","takenFromFood","takenFromBiomass","hungry","decreases","event","prev","random","severity","ceil","meds","window","resetGame","addResources","amount","ColonyOverview","paddingTop","values","r","ColonyResources","ColonyBuildingsPanel","AssignmentControl","assigned","controlWrapper","titles","controls","assignedCount","up","IconButton","size","down","ColonyAssignmentsPanel","generateSubtitle","s","push","Colony","PageSwitcher","props","location","useLocation","history","useHistory","pathname","App","padding","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","keys","appReducer","combineReducers","max","keepAmount","Set","copy","research","newState","newResources","assignmentCopy","maxAssigned","totalAssigned","diff","i","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","persistedReducer","persistReducer","removeItem","undefined","createStore","applyMiddleware","persistor","persistStore","createTheme","palette","ReactDOM","render","StrictMode","loading","theme","darkTheme","document","getElementById"],"mappings":"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","file":"static/js/main.61edb1b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"purchasable\":\"purchasable_purchasable__26Bmy\",\"innerWrapper\":\"purchasable_innerWrapper__1BvjA\",\"disabled\":\"purchasable_disabled__1T2uz\",\"content\":\"purchasable_content__11xw4\",\"content2\":\"purchasable_content2__1IbH-\",\"owned\":\"purchasable_owned__1Rpee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlWrapper\":\"assignments_controlWrapper__1Vt46\",\"titles\":\"assignments_titles__UzqUJ\",\"controls\":\"assignments_controls__35xmT\",\"up\":\"assignments_up__2DFGc\",\"down\":\"assignments_down__28gf3\",\"assignedCount\":\"assignments_assignedCount__3rnZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"communications_wrapper__3qRre\",\"message\":\"communications_message__3vtW6\",\"priorityMessage\":\"communications_priorityMessage__1Nwzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"modal_backdrop__19mz5\",\"wrapper\":\"modal_wrapper__2UEXh\",\"actions\":\"modal_actions__1e5yH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidePanel\":\"main_sidePanel__2bUyy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"launchText\":\"launchPanel_launchText__FT86o\",\"subtext\":\"launchPanel_subtext__3dYVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planetDisplay\":\"planetDisplay_planetDisplay__2xmBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typistWrapper\":\"meetColony_typistWrapper__3SuDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"colony_wrapper__4WcZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageSwitcher_wrapper__3NFYx\"};","export const fabObjects = {\r\n  spaceNet: {\r\n    title: 'Space Net',\r\n    subtitle: \"Catches things that float into the nets\",\r\n    basePrice: 25,\r\n    costMultiFactor: 1.07,\r\n    baseIncome: 1,\r\n    message: \"Nets? In Space? You wont catch any fish but you might catch some stray rocks or aliens or something. \" +\r\n      \"Anything we catch in the nets will be melted down and processed into raw materials to use with the fabricators.\"\r\n  },\r\n  drone: {\r\n    title: 'Drone',\r\n    subtitle: \"Orbits the target and automatically mines using lasers\",\r\n    basePrice: 500,\r\n    costMultiFactor: 1.08,\r\n    baseIncome: 10,\r\n    message: \"Drones will be able to get in much closer the the surface of the object.\"\r\n  },\r\n  probe: {\r\n    title: 'Probe',\r\n    subtitle: \"Launch a probe to drill core samples from the surface\",\r\n    basePrice: 5500,\r\n    costMultiFactor: 1.09,\r\n    baseIncome: 75,\r\n    message: \"\"\r\n  },\r\n  lander: {\r\n    title: 'Lander',\r\n    subtitle: \"Send a small lander to the surface to do mobile excavation\",\r\n    basePrice: 85000,\r\n    costMultiFactor: 1.10,\r\n    baseIncome: 250,\r\n    message: \"Small little land rovers similar to the ones the Inter-Planetary Union used to survey Mars before its colonization.\"\r\n  },\r\n  miningRig: {\r\n    title: 'Mining Rig',\r\n    subtitle: \"Establish a semi-permanent mining structure on the surface\",\r\n    basePrice: 500000,\r\n    costMultiFactor: 1.11,\r\n    baseIncome: 850,\r\n    message: \"We have established a proper mining facility on the surface. We can now really start to screw this place up.\"\r\n  },\r\n  droneFactory: {\r\n    title: 'Drone Factory',\r\n    subtitle: \"No it does not make more drones, it is run by drones\",\r\n    basePrice: 2500000,\r\n    costMultiFactor: 1.12,\r\n    baseIncome: 2000,\r\n    message: \"Surprise! The factory actually does make more drones, what a deal!\"\r\n  },\r\n  launchFacility: {\r\n    title: 'Orbital Launch',\r\n    subtitle: \"A proper orbital launch facility will allow us to get resources off the surface of this rock\",\r\n    basePrice: 10000000,\r\n    costMultiFactor: 1.14,\r\n    baseIncome: 2500,\r\n    message: \"!We can now get resources into orbit and return to Earth with our spoils. With only 1 launch facility \" +\r\n      \"we won't be able to get much into orbit though. Build more launch facilities and space elevators to increase \" +\r\n      \"how much of our resources we can take back with us.\"\r\n  },\r\n  spaceElevator: {\r\n    title: 'Space Elevator',\r\n    subtitle: \"A space elevator will help us get even more resources into orbit before we blast back to earth rich\",\r\n    basePrice: 50000000,\r\n    costMultiFactor: 1.15,\r\n    baseIncome: 3500,\r\n    message: \"The more orbital launch facilities and space elevators we have when we launch for earth the more of the resources \" +\r\n      \"we have extracted we will be able to take with us.\"\r\n  },\r\n}","\r\n\r\nexport const ResearchObjects = [\r\n  // SPACE NET\r\n  {\r\n    id: \"sn1\",\r\n    title: 'Improved Space Nets',\r\n    subtitle: \"Bigger nets = more space junk. This one is pretty self-explanatory\",\r\n    message: \"Double the size of the nets, if you make these nets any bigger we might actually catch some space fish.\",\r\n    multiplier: 3,\r\n    fabType: 'spaceNet',\r\n    basePrice: 10000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'sn2',\r\n    title: 'Improved Space Nets II',\r\n    subtitle: \"Have you have tried eating soup off a plate? Yeah well we made the nets more like bowls now\",\r\n    message: \"Did that make sense? Bowls?... the nets are deeper now so we can catch bigger stuff, kind of like a baseball glove.\",\r\n    multiplier: 4,\r\n    fabType: 'spaceNet',\r\n    basePrice: 30000,\r\n    dependencies: ['sn1']\r\n  },\r\n  {\r\n    id: 'sn3',\r\n    title: 'Improved Space Nets III',\r\n    subtitle: \"We added titanium threads to the net to catch more volatile space junk like meteorites or knives\",\r\n    message: \"We doubled the efficiency of the nets again, I think that makes it 3^6 or !(2^3) times better. They are \" +\r\n      \"stronger now so we can catch pretty much anything.\",\r\n    multiplier: 8,\r\n    fabType: 'spaceNet',\r\n    basePrice: 550000,\r\n    dependencies: ['sn2']\r\n  },\r\n  // DRONES\r\n  {\r\n    id: 'dr1',\r\n    title: 'Improved Drones I',\r\n    subtitle: \"Improved drone batteries and auto pilot software lets us more efficiently control more drones without crashing them into each other\",\r\n    message: \"We didnt actually improve anything, we just put extra batteries on them its not astrophysics.\",\r\n    multiplier: 3,\r\n    fabType: 'drone',\r\n    basePrice: 125000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'dr2',\r\n    title: 'Improved Drones II',\r\n    subtitle: \"Improved aerial reconnaissance lets the drones find more mineral rich deposits to improve their efficiency\",\r\n    message: \"Would you believe it if I told you before this upgrade I was controlling every single one of these drones?\",\r\n    multiplier: 5,\r\n    fabType: 'drone',\r\n    basePrice: 225000,\r\n    dependencies: ['dr1']\r\n  },\r\n  // PROBE\r\n  {\r\n    id: 'pr1',\r\n    title: 'Improved Probes I',\r\n    subtitle: \"More powerful onboard generators allow us to probe deeper\",\r\n    message: \"Each probe is now equipped with a thermo-radio isotope generator capable of up to 500W. Dont ask where we got the radioactive material, \" +\r\n      \"also... check yourself regularly.\",\r\n    multiplier: 2,\r\n    fabType: 'probe',\r\n    basePrice: 1375000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'pr2',\r\n    title: 'Improved Probes II',\r\n    subtitle: \"Liquid cooling vents let the probes drill harder and for longer\",\r\n    message: \"The probes can now scan for sub-surface liquids, drill for said liquids, and re-circulate the liquid through \" +\r\n      \"its drilling mantle. Pretty clever.\",\r\n    multiplier: 3,\r\n    fabType: 'probe',\r\n    basePrice: 6875000,\r\n    dependencies: ['pr1']\r\n  },\r\n  // PROBE\r\n  {\r\n    id: 'ld1',\r\n    title: 'Improved Landers I',\r\n    subtitle: \"Improve the lander with a bigger drilling bit and a tiny shovel. We also gave them emotions, but only sadness so they feel bad when they keep getting stuck in holes\",\r\n    message: \"Each land rover now feels an overwhelming sadness when it gets stuck on rocks and in holes. My research \" +\r\n      \"seems to indicate this will make them try harder to not get stuck in holes but somehow \" +\r\n      \"I think we might just end up with depressed probes.\",\r\n    multiplier: 2,\r\n    fabType: 'lander',\r\n    basePrice: 21250000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'ld2',\r\n    title: 'Improved Landers II',\r\n    subtitle: \"These guys are so cute, we gave them little backpacks too so they could... cary more stuff?\",\r\n    message: \"Depressed little surface trucks... but with accessories!\",\r\n    multiplier: 2,\r\n    fabType: 'lander',\r\n    basePrice: 106250000,\r\n    dependencies: ['ld1']\r\n  },\r\n  {\r\n    id: 'mr1',\r\n    title: 'Improved Mining Rigs I',\r\n    subtitle: \"Improve the mining capabilities of the rig with ancient alien technology\",\r\n    message: \"The ancient alien technology is... diesel... Yes technically the aliens have been dead for a while. \" +\r\n      \"We did say ancient.\",\r\n    multiplier: 1.5,\r\n    fabType: 'miningRig',\r\n    basePrice: 300000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'mr2',\r\n    title: 'Improved Mining Rigs II',\r\n    subtitle: \"Improve the mining capabilities of the rig with ancient alien technology\",\r\n    message: \"\",\r\n    multiplier: 2,\r\n    fabType: 'miningRig',\r\n    basePrice: 1500000000,\r\n    dependencies: [\"mr1\"]\r\n  },\r\n  {\r\n    id: 'df1',\r\n    title: 'Improved Drone Factory I',\r\n    subtitle: \"We make more drones that make more drones that make more drones...\",\r\n    message: \"\",\r\n    multiplier: 1.5,\r\n    fabType: 'droneFactory',\r\n    basePrice: 187500000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'df2',\r\n    title: 'Improved Drone Factory II',\r\n    subtitle: \"We make more drones that make more drones that make more drones...\",\r\n    message: \"\",\r\n    multiplier: 1.5,\r\n    fabType: 'droneFactory',\r\n    basePrice: 937500000,\r\n    dependencies: [\"df1\"]\r\n  },\r\n  {\r\n    id: 'lf1',\r\n    title: 'Improved Launch Facility I',\r\n    subtitle: \"A second launch pad will let us launch twice as many rockets\",\r\n    message: \"\",\r\n    multiplier: 2,\r\n    fabType: 'launchFacility',\r\n    basePrice: 2200000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'lf2',\r\n    title: 'Improved Launch Facility II',\r\n    subtitle: \"A third launch pad will let us launch three times as many rockets\",\r\n    message: \"\",\r\n    multiplier: 1.5,\r\n    fabType: 'launchFacility',\r\n    basePrice: 7600000000,\r\n    dependencies: [\"lf1\"]\r\n  },\r\n  {\r\n    id: 'se1',\r\n    title: 'Improved Space Elevator I',\r\n    subtitle: \"They said I could be anything so I became a space rope\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'spaceElevator',\r\n    basePrice: 20000000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'se2',\r\n    title: 'Improved Space Elevator II',\r\n    subtitle: \"Rope thicker rope stronger = bigger loads\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'spaceElevator',\r\n    basePrice: 40000000000,\r\n    dependencies: ['se1']\r\n  },\r\n]","export const colonyObjects = {\r\n  hydroponics: {\r\n    title: \"Hydroponics Lab\",\r\n    subtitle: \"A hydroponics lab will allow us to start growing our own plant matter. Its not tasty but at least we wont starve.\",\r\n    basePrice: 5000,\r\n    costMultiFactor: 2,\r\n    workers: 3,\r\n    inputs : [],\r\n    outputs: [\r\n      {\r\n        name: 'biomass',\r\n        numerator: 3,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n  medic: {\r\n    title: \"Medical Center\",\r\n    subtitle: \"Modern medicine will be a huge benefit for us\",\r\n    basePrice: 30000,\r\n    costMultiFactor: 2,\r\n    workers: 1,\r\n    inputs : [\r\n      {\r\n        name: 'tech',\r\n        numerator: 5,\r\n        denominator: 60\r\n      },\r\n      {\r\n        name: 'biomass',\r\n        numerator: 2,\r\n        denominator: 60\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'meds',\r\n        numerator: 1,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n  engineer:{\r\n    title: \"Engineers Workshop\",\r\n    subtitle: \"Our systems are in dire need of maintenance, proper engineering training and tools would let us \" +\r\n      \"better maintain our life support and other systems\",\r\n    basePrice: 100000,\r\n    costMultiFactor: 2,\r\n    workers: 1,\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: 'steel',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n      {\r\n        name: 'tech',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n    ]\r\n  },\r\n\r\n  cook: {\r\n    title: \"Kitchen\",\r\n    subtitle: \"Cooking facilities will let us turn the biomass into proper food. Eating biomass sucks.\",\r\n    basePrice: 200000,\r\n    costMultiFactor: 2,\r\n    workers: 2,\r\n    inputs : [\r\n      {\r\n        name: 'biomass',\r\n        numerator: 4,\r\n        denominator: 60\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'food',\r\n        numerator: 2,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n}\r\n\r\n\r\nexport const colonyMessages = [\r\n  \"We are having a celebration\"\r\n]","import {fabObjects} from \"../GameData/FabObjects\";\r\nimport {ResearchObjects} from \"../GameData/ResearchObjects\";\r\nimport {colonyObjects} from \"../GameData/colonyObjects\";\r\n\r\nexport const getResources = store => store.resources.current;\r\nexport const getIncomeSources = store => store.sources;\r\n\r\nexport const getSourceCurrentIncomes = store => {\r\n  // todo multiply each source by any upgrades\r\n  let incomes = {}\r\n  for (const [sourceType, count] of Object.entries(store.sources)) {\r\n    const fabDetails = fabObjects[sourceType];\r\n    if (fabDetails){\r\n      let multiplier = 1;\r\n      for (const upgradeId of store.upgrades) {\r\n        const upgrade = ResearchObjects.find(x => x.id === upgradeId);\r\n        if(upgrade?.fabType === sourceType){\r\n          multiplier = multiplier * upgrade.multiplier;\r\n        }\r\n      }\r\n      incomes[sourceType] = fabDetails.baseIncome * count * multiplier;\r\n    }\r\n  }\r\n  return incomes;\r\n};\r\n\r\n\r\nexport const getIncomePerSecond = store => {\r\n  // calculate the total income / second\r\n  let total = 0;\r\n  for (const [sourceType, count] of Object.entries(store.sources)) {\r\n    const fabDetails = fabObjects[sourceType];\r\n    if (fabDetails){\r\n      let multiplier = 1;\r\n      for (const upgradeId of store.upgrades) {\r\n        const upgrade = ResearchObjects.find(x => x.id === upgradeId);\r\n        if(upgrade?.fabType === sourceType){\r\n          multiplier = multiplier * upgrade.multiplier;\r\n        }\r\n      }\r\n      total += fabDetails.baseIncome * count * multiplier;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport const getResearched = store => {\r\n  return store.upgrades;\r\n}\r\n\r\nexport const getColonyResources = store => {\r\n  let resourcesCopy = {...store.colony.resources};\r\n  for (const [key, value] of Object.entries(resourcesCopy)) {\r\n    resourcesCopy[key] = Math.floor(value);\r\n  }\r\n  return resourcesCopy;\r\n}\r\n\r\nexport const getColonyResourcesPerSecond = store => {\r\n  let incomes = {};\r\n\r\n  loop:\r\n  for (const [key, value] of Object.entries(store.colony.assignments)) {\r\n    const details = colonyObjects[key];\r\n    if(!details) continue;\r\n\r\n    // if there are inputs, make sure we have enough to proceed else abort\r\n    let incomesCopy = {...incomes}; // change the copy, if we cant pay all inputs the copy is discarded\r\n    for (const input of details.inputs) {\r\n      const inputRate = input.numerator/input.denominator * value;\r\n      if((store.colony.resources[input.name] ?? 0) < inputRate){\r\n        continue loop;\r\n      }else{\r\n        incomesCopy[input.name] = (incomesCopy[input.name] ?? 0) - inputRate;\r\n      }\r\n    }\r\n    incomes = incomesCopy;  // since we can pay all inputs, we use the copy\r\n    for (const output of details.outputs) {\r\n      const outputRate = output.numerator/output.denominator * value;\r\n      incomes[output.name] = (incomesCopy[output.name] ?? 0) + outputRate;\r\n    }\r\n  }\r\n  return incomes;\r\n}\r\n\r\nexport const getColonistAssignments = store => {\r\n  return store.colony.assignments;\r\n}\r\n\r\nexport const listenCommunications = store => {\r\n  return store.communications.slice(-20).reverse();\r\n}\r\n","export default function formatInt(number){\r\n  return number.toFixed().replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\r\n}","import {useSelector} from \"react-redux\";\r\nimport {getIncomePerSecond, getResources} from \"../../Redux/selectors\";\r\nimport FormatInt from \"../../Util/FormatInt\";\r\n\r\n\r\nexport default function ResourceDisplay(){\r\n  const resources = useSelector(getResources);\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n\r\n  return(\r\n    <div>\r\n      <h1 style={{textAlign: 'right', marginBottom: 0}}>{FormatInt(resources)}</h1>\r\n      <h2 style={{marginTop: '-10px', marginBottom: 0, opacity: 0.5, float: 'left'}}>Resources</h2>\r\n      <h2 style={{marginTop: '-10px', marginBottom: 0, opacity: 0.5, float: 'right'}}>{FormatInt(incomePerSecond)}/s</h2>\r\n      <div style={{clear: \"both\"}}/>\r\n    </div>\r\n  )\r\n}","import classes from \"./planetDisplay.module.css\";\r\n\r\nexport default function PlanetDisplay(){\r\n\r\n  return(\r\n    <div className={classes.planetDisplay}>\r\n      <h3 style={{opacity: 0.5, float: 'left', width: '49%'}}>Asteroid: AX62</h3>\r\n      <h3 style={{opacity: 0.5, textAlign: 'right', float: 'right', width: '49%'}}>000001.01.15</h3>\r\n      <h3 style={{opacity: 0.5, clear: 'both'}}>Resource Density: Low</h3>\r\n      <h3 style={{opacity: 0.5, clear: 'both'}}>Life: None</h3>\r\n    </div>\r\n  )\r\n}","import classes from \"./purchasable.module.css\";\r\nimport {ButtonBase} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormatInt from \"../../../Util/FormatInt\";\r\n\r\n\r\nexport default function Purchasable({title, subtitle, altText, owned, price, onPurchase, disabled}) {\r\n\r\n\r\n  return (\r\n    <div className={classes.purchasable}>\r\n      <ButtonBase style={{width: '100%'}} disabled={disabled} onClick={onPurchase}>\r\n        <div className={[classes.innerWrapper, disabled && classes.disabled].join(\" \")}>\r\n\r\n          <div className={classes.content} style={{width: owned >= 0 ? '60%' : '100%'}}>\r\n            <h1>{title}</h1>\r\n            <h3 style={{marginTop: 'auto'}}>{FormatInt(price)}</h3>\r\n          </div>\r\n          <div className={classes.content2} style={{width: owned >= 0 ? '60%' : '100%'}}>\r\n            <p style={{marginBottom: '4px'}}>{subtitle}</p>\r\n            <p style={{opacity: 0.7, marginTop: 'auto'}}>{altText}</p>\r\n          </div>\r\n          {\r\n            owned >= 0 &&\r\n            <div style={{width: '40%', marginLeft: 'auto'}}>\r\n              <span className={classes.owned}>{Math.min(999, owned)}</span>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </ButtonBase>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nPurchasable.propTypes = {\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  altText: PropTypes.string,\r\n  owned: PropTypes.number,\r\n  price: PropTypes.number,\r\n  onPurchase: PropTypes.func,\r\n  disabled: PropTypes.bool\r\n};","export const RESET = 'RESET';\r\n\r\nexport const INCREASE_RESOURCES = \"INCREASE_RESOURCES\";\r\nexport const DECREASE_RESOURCES = \"DECREASE_RESOURCES\";\r\n\r\nexport const ADD_INCOME_SOURCE = \"ADD_INCOME_SOURCE\";\r\n\r\nexport const BUY_UPGRADE = \"BUY_UPGRADE\";\r\n\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const RECEIVE_MESSAGE = \"RECEIVE_MESSAGE\";\r\nexport const CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\r\n\r\nexport const TOGGLE_PAUSE = \"TOGGLE_PAUSE\";\r\nexport const PRESTIGE = \"PRESTIGE\";\r\nexport const CLOSE_STORY = \"CLOSE_STORY\";\r\n\r\n// COLONY\r\nexport const ADD_BUILDING = \"ADD_BUILDING\";\r\nexport const ADD_COLONIST = \"ADD_COLONIST\";\r\nexport const INCREASE_COLONY_RESOURCE = \"INCREASE_COLONY_RESOURCE\";\r\nexport const DECREASE_COLONY_RESOURCE = \"DECREASE_COLONY_RESOURCE\";\r\nexport const ASSIGN_COLONIST = \"ASSIGN_COLONIST\";\r\nexport const UN_ASSIGN_COLONIST = \"UN_ASSIGN_COLONIST\";\r\n","import {\r\n  ADD_BUILDING, ADD_COLONIST,\r\n  ADD_INCOME_SOURCE,\r\n  ADD_MESSAGE,\r\n  ASSIGN_COLONIST,\r\n  BUY_UPGRADE,\r\n  CLEAR_MESSAGES,\r\n  CLOSE_STORY,\r\n  DECREASE_COLONY_RESOURCE,\r\n  DECREASE_RESOURCES,\r\n  INCREASE_COLONY_RESOURCE,\r\n  INCREASE_RESOURCES,\r\n  PRESTIGE,\r\n  RECEIVE_MESSAGE,\r\n  TOGGLE_PAUSE,\r\n  UN_ASSIGN_COLONIST,\r\n} from \"./actionTypes\";\r\n\r\nexport const increaseResources = (amount) => ({\r\n  type: INCREASE_RESOURCES,\r\n  payload: amount\r\n})\r\n\r\nexport const decreaseResources = (amount) => ({\r\n  type: DECREASE_RESOURCES,\r\n  payload: amount\r\n})\r\n\r\n/**\r\n *\r\n * @param type the type of income source to add\r\n * @param count the current count of this income source\r\n * @param price the price the income source currently costs\r\n */\r\nexport const addIncomeSource = (type, count, price, prestige) => ({\r\n  type: ADD_INCOME_SOURCE,\r\n  payload: {\r\n    type, count, price, prestige\r\n  }\r\n})\r\n\r\nexport const buyUpgrade = (id, price, prestige) => ({\r\n  type: BUY_UPGRADE,\r\n  payload: {\r\n    id,\r\n    price,\r\n    prestige\r\n  }\r\n})\r\n\r\nexport const addMessage = (message, delay = 3) => ({\r\n  type: ADD_MESSAGE,\r\n  payload: {\r\n    message,\r\n    delay\r\n  }\r\n})\r\n\r\nexport const receiveMessage = (index) => ({\r\n  type: RECEIVE_MESSAGE,\r\n  payload: {\r\n    index,\r\n  }\r\n})\r\n\r\nexport const clearMessages = (index) => ({\r\n  type: CLEAR_MESSAGES,\r\n  payload: {}\r\n})\r\n\r\nexport const togglePaused = () => ({\r\n  type: TOGGLE_PAUSE,\r\n  payload: {}\r\n})\r\n\r\nexport const prestige = (currentPrestige, keepPercent) => ({\r\n  type: PRESTIGE,\r\n  payload: {\r\n    currentPrestige,\r\n    keepPercent\r\n  }\r\n})\r\n\r\nexport const closeStory = (type) => ({\r\n  type: CLOSE_STORY,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\nexport const addColonist = (count) => ({\r\n  type: ADD_COLONIST,\r\n  payload: {\r\n    count\r\n  }\r\n})\r\n\r\nexport const increaseColonyResources = (increases) => ({\r\n  type: INCREASE_COLONY_RESOURCE,\r\n  payload: {\r\n    increases\r\n  }\r\n})\r\n\r\nexport const decreaseColonyResources = (decreases) => ({\r\n  type: DECREASE_COLONY_RESOURCE,\r\n  payload: {\r\n    decreases\r\n  }\r\n})\r\n\r\nexport const addBuilding = (type, count, price,) => ({\r\n  type: ADD_BUILDING,\r\n  payload: {\r\n    type,\r\n    count,\r\n    price\r\n  }\r\n})\r\n\r\nexport const assignColonist = (type) => ({\r\n  type: ASSIGN_COLONIST,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\nexport const unAssignColonist = (type) => ({\r\n  type: UN_ASSIGN_COLONIST,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default function fabricatePricingFunction(fabItem, count){\r\n  return Math.floor(fabItem.basePrice * Math.pow(fabItem.costMultiFactor, count))\r\n}","import Purchasable from \"./controls/purchasable/purchasable\";\r\nimport {fabObjects} from \"../GameData/FabObjects\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIncomePerSecond, getIncomeSources, getResources, getSourceCurrentIncomes} from \"../Redux/selectors\";\r\nimport {addIncomeSource} from \"../Redux/actions\";\r\nimport FabricatePricingFunction from \"../Util/FabricatePricingFunction\";\r\nimport FormatInt from \"../Util/FormatInt\";\r\n\r\n\r\nexport default function FabricatePanel() {\r\n  const dispatch = useDispatch();\r\n  const sources = useSelector(getIncomeSources);\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n  const currentIncomeSources = useSelector(getSourceCurrentIncomes);\r\n  const resources = useSelector(getResources)\r\n  const prestige = useSelector(state => state.game.prestige);\r\n\r\n  const mapObject = Object.entries(fabObjects).map(([key, value]) => ({...value, key}))\r\n\r\n  return (\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {mapObject.map((details, index) => {\r\n          if (index === 0 || sources[mapObject[index - 1].key] > 0) {\r\n            return (\r\n              <Grid item xs={12} key={`fabrication_option_${details.key}`}>\r\n                <Purchasable\r\n                  title={details.title}\r\n                  subtitle={details.subtitle}\r\n                  altText={`${FormatInt((currentIncomeSources[details.key] / sources[details.key]) || details.baseIncome)}/s - ${(currentIncomeSources[details.key] / incomePerSecond * 100 || 0).toFixed(1)}% of total`}\r\n                  owned={sources[details.key]}\r\n                  price={FabricatePricingFunction(details, sources[details.key])}\r\n                  disabled={resources < FabricatePricingFunction(details, sources[details.key])}\r\n                  onPurchase={() => {\r\n                    dispatch(addIncomeSource(details.key, sources[details.key], FabricatePricingFunction(details, sources[details.key]), prestige));\r\n                  }}\r\n                />\r\n              </Grid>\r\n            )\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      )}\r\n    </Grid>\r\n  )\r\n}","import {Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIncomeSources, getResearched, getResources} from \"../Redux/selectors\";\r\nimport {ResearchObjects} from \"../GameData/ResearchObjects\";\r\nimport CheckResearchUnlockable from \"../Util/CheckResearchUnlockable\";\r\nimport Purchasable from \"./controls/purchasable/purchasable\";\r\nimport {buyUpgrade} from \"../Redux/actions\";\r\n\r\n\r\nexport default function ResearchPanel(){\r\n  const dispatch = useDispatch();\r\n  const resources = useSelector(getResources)\r\n  const researched = useSelector(getResearched);\r\n  const sources = useSelector(getIncomeSources);\r\n  const prestige = useSelector(state => state.game.prestige)\r\n\r\n\r\n  const generateAltText = (multi) => {\r\n    if(multi >= 2){\r\n      return `${multi}x multiplier`\r\n    }else{\r\n      // multi must be between 1 - 2\r\n      multi -= 1;\r\n      multi *= 100;\r\n      return `${multi.toFixed(0)}% increase`\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {ResearchObjects.map(item => {\r\n        if(CheckResearchUnlockable(item.id, researched, sources)){\r\n          return(\r\n            <Grid item xs={12} key={`research_option_${item.id}`}>\r\n              <Purchasable\r\n                title={item.title}\r\n                subtitle={item.subtitle}\r\n                price={item.basePrice}\r\n                disabled={resources < item.basePrice}\r\n                altText={generateAltText(item.multiplier)}\r\n                onPurchase={() => {\r\n                  dispatch(buyUpgrade(item.id, item.basePrice, prestige));\r\n                }}\r\n              />\r\n            </Grid>\r\n          )\r\n        }else{\r\n          return null;\r\n        }\r\n      })}\r\n    </Grid>\r\n    )\r\n}","import {ResearchObjects} from \"../GameData/ResearchObjects\";\r\n\r\nexport default function checkResearchUnlockable(id, purchasedUpgrades, incomeSources) {\r\n  // if we already researched it return false\r\n  if(purchasedUpgrades.some(x => x === id)) return false;\r\n\r\n  // return false if there are any dependencies that we have not purchased yet\r\n  const item = ResearchObjects.find(x => x.id === id);\r\n  for (const dependency of item.dependencies) {\r\n    if(!purchasedUpgrades.some(x => x === dependency)) return false;\r\n  }\r\n\r\n  // return false if we dont own any of the fabType the upgrade is for\r\n  if(incomeSources[item.fabType] <= 0) return false\r\n\r\n  return true;\r\n}","import { useSelector, shallowEqual } from 'react-redux'\r\n\r\nexport function useShallowEqualSelector(selector) {\r\n  return useSelector(selector, shallowEqual)\r\n}","import classes from \"./communications.module.css\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {listenCommunications} from \"../../Redux/selectors\";\r\nimport Typist from 'react-typist';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {receiveMessage} from \"../../Redux/actions\";\r\n\r\n\r\nexport default function CommunicationsPanel(){\r\n  const dispatch = useDispatch();\r\n  const messages = useShallowEqualSelector(listenCommunications);\r\n\r\n  const formatMsg = (msg) => {\r\n    if(msg.startsWith('!')){\r\n      return msg.substring(1);\r\n    }\r\n    return msg;\r\n  }\r\n\r\n  const isImportant = (msg) => {\r\n    return msg.startsWith('!');\r\n  }\r\n\r\n  return(\r\n    <div className={classes.wrapper}>\r\n      <Grid container direction={'column'} spacing={2}>\r\n        {messages.map(msg => (\r\n          <Grid item xs={12} key={msg.index}>\r\n            {\r\n              msg.received ?\r\n                <span className={[classes.message, isImportant(msg.message) && classes.priorityMessage].join(\" \")}\r\n                      dangerouslySetInnerHTML={{__html: formatMsg(msg.message)}} />\r\n                :\r\n                <Typist\r\n                  startDelay={1}\r\n                  onTypingDone={() => dispatch(receiveMessage(msg.index))}\r\n                  cursor={{\r\n                    show: true,\r\n                    blink: true,\r\n                    element: '|',\r\n                    hideWhenDone: true,\r\n                    hideWhenDoneDelay: 250,\r\n                  }}\r\n                >\r\n                  <span className={[classes.message, isImportant(msg.message) && classes.priorityMessage].join(\" \")}>\r\n                    {formatMsg(msg.message)}</span>\r\n                </Typist>\r\n            }\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from \"./modal.module.css\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  actions: PropTypes.array,\r\n};\r\n\r\nfunction Modal({open, actions, children}) {\r\n  if(!open) return null;\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.backdrop}>\r\n      <div className={classes.wrapper}>\r\n        {children}\r\n        <Grid container spacing={2} className={classes.actions}>\r\n          {\r\n            actions && actions.length > 0 &&\r\n            actions.map((action, index) => (\r\n              <Grid item key={`${action.label}_button`}>\r\n                <Button\r\n                  onClick={action.onClick}\r\n                  variant={'outlined'}\r\n                  color={action.color}\r\n                  disabled={action.disabled}\r\n                >{action.label}</Button>\r\n              </Grid>\r\n            ))\r\n          }\r\n        </Grid>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\r\nimport {Button, Divider, Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classes from \"./launchPanel.module.css\";\r\nimport Modal from \"../modal/modal\";\r\nimport {prestige} from \"../../../Redux/actions\";\r\nimport useKeepPercent from \"../../../Hooks/useKeepPercent\";\r\n\r\nfunction LaunchPanel() {\r\n  const dispatch = useDispatch();\r\n  const launchFacilityCount = useSelector((state) => state.sources.launchFacility)\r\n  const currentPrestige = useSelector(state => state.game.prestige);\r\n  const keepPercent = useKeepPercent();\r\n\r\n  const [launchConfirmation, setLaunchConfirmation] = useState(false);\r\n  const launchConfirmActions = [\r\n    {\r\n      label: 'cancel',\r\n      color: 'secondary',\r\n      onClick: () => setLaunchConfirmation(false)\r\n    },\r\n    {\r\n      label: \"yes I'm ready\",\r\n      onClick: () => {\r\n        dispatch(prestige(currentPrestige, keepPercent));\r\n        setLaunchConfirmation(false);\r\n      }\r\n    }\r\n  ]\r\n\r\n  const roundToAppropriate = num => {\r\n    if(num > 1){\r\n      return num.toFixed(3);\r\n    }else if(num > 0.0999){\r\n      return num.toFixed(3);\r\n    }else if(num > 0.0099){\r\n      return num.toFixed(4);\r\n    }else{\r\n      return num.toFixed(5);\r\n    }\r\n  }\r\n\r\n  if(launchFacilityCount === 0) return null;\r\n  return (\r\n    <div>\r\n      <Grid item xs={12} style={{display: \"flex\", flexDirection: 'column', alignItems: 'center'}}>\r\n        <h2 className={classes.launchText}>RETURN TO {currentPrestige === 0 ? \"EARTH\" : \"MARS\"}</h2>\r\n        <span className={classes.subtext}>You will keep {roundToAppropriate(keepPercent * 100)}% of resources</span>\r\n        <Button\r\n          fullWidth\r\n          variant={'outlined'}\r\n          color={'secondary'}\r\n          onClick={ () => setLaunchConfirmation(true)}\r\n        >Launch</Button>\r\n      </Grid>\r\n      <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n      <Modal\r\n        open={launchConfirmation}\r\n        actions={launchConfirmActions}\r\n      >\r\n        <div>\r\n          <h1>\r\n            Are you sure you are ready to launch?\r\n          </h1>\r\n          <p>\r\n            Building more <span style={{color: 'var(--color-primary)'}}>Orbital Launch Platforms</span> and\r\n            <span style={{color: 'var(--color-primary)'}}>Space Elevators</span> will increase the amount of resources you will\r\n            get to bring with you. Only leave when you are sure you are ready.\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LaunchPanel;","import {useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport default function useKeepPercent() {\r\n  const [factor, setFactor] = useState(0);\r\n  const elevatorCount = useSelector((state) => state.sources.spaceElevator)\r\n  const launchFacilityCount = useSelector((state) => state.sources.launchFacility)\r\n\r\n  const eq = (count) => {\r\n    return -1 / (1 + count / 200) + 1\r\n  }\r\n\r\n  const launchFactor = 0.35;\r\n  const elevatorFactor = 0.65;\r\n  // return eq(launchFacilityCount) * launchFactor + eq(elevatorCount) * elevatorFactor;\r\n\r\n\r\n  useEffect(() => {\r\n    setFactor(eq(launchFacilityCount) * launchFactor + eq(elevatorCount) * elevatorFactor)\r\n  }, [elevatorCount, launchFacilityCount])\r\n\r\n  return factor;\r\n}\r\n","import {Button, ButtonGroup, Divider, Grid} from \"@material-ui/core\";\r\nimport classes from \"./main.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ResourceDisplay from \"../../Components/resourceDisplay/resourceDisplay\";\r\nimport PlanetDisplay from \"../../Components/planetDisplay/planetDisplay\";\r\nimport {useState} from \"react\";\r\nimport FabricatePanel from \"../../Components/fabricatePanel\";\r\nimport {increaseResources} from \"../../Redux/actions\";\r\nimport ResearchPanel from \"../../Components/researchPanel\";\r\nimport CommunicationsPanel from \"../../Components/communications/communicationsPanel\";\r\nimport LaunchPanel from \"../../Components/controls/LaunchButton/launchPanel\";\r\n\r\n\r\nexport default function Main(){\r\n  const dispatch = useDispatch();\r\n\r\n  const [openTab, setOpenTab] = useState('fabricate');\r\n\r\n\r\n  return(\r\n    <Grid container spacing={2} style={{height: '100vh'}} alignItems={'stretch'}>\r\n      <Grid item xs={12} sm={4} md={3} className={classes.sidePanel} style={{overflow: 'hidden'}}>\r\n          <ResourceDisplay/>\r\n          <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n          <PlanetDisplay/>\r\n          <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n          <Button\r\n            variant={'outlined'}\r\n            fullWidth\r\n            onClick={() => dispatch(increaseResources(1))}\r\n          >Mine resources</Button>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <LaunchPanel/>\r\n        <CommunicationsPanel/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4} md={6}>\r\n        <div style={{height: '200px', width: '100%'}}/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4} md={3} className={classes.sidePanel}>\r\n        <ButtonGroup fullWidth>\r\n          <Button\r\n            variant={openTab === 'fabricate' ? \"contained\" : \"outlined\"}\r\n            onClick={() => setOpenTab('fabricate')}\r\n          >Fabricate</Button>\r\n          <Button\r\n            variant={openTab === 'research' ? \"contained\" : \"outlined\"}\r\n            onClick={() => setOpenTab('research')}\r\n          >Research</Button>\r\n        </ButtonGroup>\r\n        {openTab === 'fabricate' ? <FabricatePanel /> : <ResearchPanel />}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { useEffect, useRef } from 'react'\r\n\r\nfunction useInterval(callback, delay=null) {\r\n  const savedCallback = useRef(callback)\r\n  const last = useRef(performance.now());\r\n  const init = useRef(performance.now());\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return\r\n    }\r\n\r\n    const id = setInterval(() => {\r\n      const now = performance.now();\r\n      const time = (now - init.current) / 1000;\r\n      const delta = (now - last.current) / 1000;\r\n\r\n      savedCallback.current({time, delta})\r\n      last.current = now;\r\n    }, delay)\r\n\r\n    return () => clearInterval(id)\r\n  }, [delay])\r\n}\r\n\r\nexport default useInterval","import React, {useState} from 'react';\r\nimport Modal from \"../../controls/modal/modal\";\r\nimport Typist from 'react-typist';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {closeStory} from \"../../../Redux/actions\";\r\nimport classes from \"./meetColony.module.css\";\r\n\r\nfunction MeetColonyDialogPopup({open}) {\r\n  const dispatch = useDispatch();\r\n  const show = useSelector(state => state.game.storyShow.meetColony)\r\n  const [doneTyping, setDoneTyping] = useState(false);\r\n\r\n\r\n  if(!show) return null;\r\n  return (\r\n    <Modal open actions={[{\r\n      label: \"Give Resources\",\r\n      // disabled: !doneTyping,\r\n      onClick: () => dispatch(closeStory('meetColony'))\r\n    }]}>\r\n      <div className={classes.typistWrapper}>\r\n        <Typist\r\n          startDelay={1}\r\n          onTypingDone={() => setDoneTyping(true)}\r\n          cursor={{\r\n            show: true,\r\n            blink: true,\r\n            element: '|',\r\n            hideWhenDone: true,\r\n            hideWhenDoneDelay: 250,\r\n          }}\r\n        >\r\n          <span style={{fontSize: '1.5em'}}>Incoming transmission...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>Mayday Mayday SOS...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>The earth has been destroyed!</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>We thought we were the only humans left in the universe</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>3 years ago the world fell into a civil war that ended up destroying Earth and most of Mars.\r\n            We are only 8 people surviving deep under the martian surface. We hae no resources to rebuild and our space port was destroyed.\r\n            Without help we won't survive longer than a couple more miserable years.</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>Please...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={2000}/>\r\n          <span>Help us...</span>\r\n          <br/><br/>\r\n\r\n        </Typist>\r\n        <br/>\r\n\r\n      </div>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MeetColonyDialogPopup;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getColonyResources, getColonyResourcesPerSecond, getIncomePerSecond} from \"../Redux/selectors\";\r\nimport {INCREASE_RESOURCES, RESET} from \"../Redux/actionTypes\";\r\nimport useInterval from \"../Hooks/useInterval\";\r\nimport usePaused from \"../Hooks/usePaused\";\r\nimport MeetColonyDialogPopup from \"./story/firstPrestige/meetColonyDialogPopup\";\r\nimport {\r\n  addColonist,\r\n  addMessage,\r\n  assignColonist,\r\n  decreaseColonyResources,\r\n  increaseColonyResources\r\n} from \"../Redux/actions\";\r\nimport {useShallowEqualSelector} from \"../Hooks/useShallowEqualSelector\";\r\nimport {useState} from \"react\";\r\n\r\n/**\r\n * Controls the timing of the game, ticks once every 25th of a second\r\n */\r\nexport default function GameManager() {\r\n  const dispatch = useDispatch();\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n  const colonyIncomes = useShallowEqualSelector(getColonyResourcesPerSecond);\r\n  const population = useSelector(state => state.colony.population);\r\n  const colonyResources = useShallowEqualSelector(getColonyResources);\r\n  const building = useShallowEqualSelector(state => state.colony.buildings);\r\n  const paused = usePaused();\r\n\r\n  const [goneHungry, setGoneHungry] = useState(0);\r\n\r\n\r\n  // Game global tick rate\r\n  useInterval(({time, delta}) => {\r\n    if (!paused) {\r\n      dispatch({type: INCREASE_RESOURCES, payload: incomePerSecond * delta});\r\n      let payload = Object.entries(colonyIncomes).reduce((a, [key, value]) => {\r\n        a[key] = value * delta;\r\n        return a;\r\n      }, {});\r\n      dispatch(increaseColonyResources(payload))\r\n    }\r\n  }, 40)\r\n\r\n  // colony upkeep and events\r\n  useInterval(({time, delta}) => {\r\n    if (!paused) {\r\n      console.log(\"COLONY UPKEEP\");\r\n      let foodRequired = population * (delta / 60);\r\n      let wellFed = false;\r\n      if (((colonyResources.food ?? 0) + (colonyResources.biomass ?? 0)) > foodRequired * 4) {\r\n        foodRequired *= 2;\r\n        wellFed = true;\r\n      }\r\n      const takenFromFood = Math.min(foodRequired, colonyResources.food ?? 0);\r\n      const takenFromBiomass = foodRequired - takenFromFood;\r\n      const hungry = takenFromBiomass > (colonyResources.biomass ?? 0);\r\n\r\n      dispatch(decreaseColonyResources({\r\n        biomass: takenFromBiomass,\r\n        food: takenFromFood / 2,  // food is more nutritious than biomass so it takes half as much food to feed ppl\r\n      }));\r\n\r\n      let event = false;\r\n\r\n      //events\r\n      if (hungry) {\r\n        if (goneHungry >= 3) {\r\n          dispatch(addMessage(\"A colonist has starved to death.\", 3));\r\n          dispatch(assignColonist(-1));\r\n        } else if (goneHungry === 2) {\r\n          dispatch(addMessage(\"We are starving, if we don't get food soon we will surely die.\", 3))\r\n        } else if (goneHungry === 1) {\r\n          dispatch(addMessage(\"People are rationing and going without food, it's getting pretty bad down here.\", 3))\r\n        } else {\r\n          dispatch(addMessage(\"We are running dangerously low on food, if we dont get more soon we will need to start rationing...\", 3))\r\n        }\r\n        setGoneHungry(prev => prev + 1);\r\n        event = true;\r\n      } else if (wellFed && (Math.random() > 0.92)) {\r\n        // new colonist\r\n        dispatch(addMessage(\"A new colonist has been born!\", 3))\r\n        dispatch(addColonist(1));\r\n      }\r\n\r\n      // trigger a sickness or accident\r\n      if (building?.medic && !event && (Math.random() > 0.95)) {\r\n        event = true;\r\n        const severity = Math.ceil(Math.random() * 4);\r\n        let message = \"\";\r\n        switch (severity) {\r\n          case 1: {\r\n            message = \"A colonist has come down with a fever... \";\r\n            break;\r\n          }\r\n          case 2: {\r\n            message = \"Two colonists got into a fight and have injured one another... \";\r\n            break;\r\n          }\r\n          case 3:{\r\n            message = \"While working on the air recyclers a colonist got their arm stuck in the machine and emergency vented the room the others were working in... \";\r\n            break;\r\n          }\r\n          case 4:{\r\n            message = \"A disease has spread through some of the colonists... \";\r\n            break;\r\n          }\r\n          default:{\r\n            message = \"A got sick... \";\r\n            break;\r\n          }\r\n        }\r\n        if(colonyResources?.meds >= severity){\r\n          message += \"With proper medical treatment and some bed rest they ended up alright.\";\r\n        }else{\r\n          message += \"Unfortunately we did not have enough medicine to save them.\";\r\n          dispatch(addColonist(-severity));  // kill some colonists\r\n        }\r\n        dispatch(addMessage(message, 3))\r\n      }\r\n\r\n    }\r\n  }, 60000)\r\n\r\n\r\n  // define some global functions for the console;\r\n  window.resetGame = () => {\r\n    dispatch({type: RESET})\r\n  }\r\n  window.addResources = (amount) => {\r\n    dispatch({type: INCREASE_RESOURCES, payload: amount})\r\n  }\r\n  console.log(\"game manager render sanity check\")\r\n  return (\r\n    <>\r\n      <MeetColonyDialogPopup/>\r\n    </>\r\n  )\r\n}","import {useSelector} from \"react-redux\";\r\n\r\nexport default function usePaused(){\r\n  let paused = useSelector(state => state.game.paused);\r\n  return paused;\r\n}","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {getColonistAssignments} from \"../../Redux/selectors\";\r\n\r\nfunction ColonyOverview() {\r\n  const population = useSelector(state => state.colony.population);\r\n  const resources = useShallowEqualSelector(state => state.resources.colonyResources);\r\n  const assignments = useShallowEqualSelector(getColonistAssignments);\r\n\r\n\r\n  const totalAssigned = () => {\r\n    return Object.values(assignments).reduce((a, r) => a += r, 0)\r\n  }\r\n\r\n  return (\r\n    <div style={{paddingTop: '20px'}}>\r\n      <h1 style={{margin: 0, float: \"left\"}}>Mars Colony</h1>\r\n      <h3 style={{marginTop: 0, marginBottom: 0, opacity: 0.5, textAlign: 'right'}}>{resources} - Orbital Resources</h3>\r\n      <h3 style={{marginTop: 0, marginBottom: 0, opacity: 0.5, textAlign: 'right'}}>{population} ({population - totalAssigned()}) - Population</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyOverview;","import React from 'react';\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {getColonyResources} from \"../../Redux/selectors\";\r\n\r\nfunction ColonyResources() {\r\n  let resources = useShallowEqualSelector(getColonyResources);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <table style={{width: '100%', textAlign: 'left'}}>\r\n        <thead>\r\n        <tr><th>Resource</th><th>amount</th></tr>\r\n        </thead>\r\n        <tbody>\r\n        {Object.entries(resources).map(([key, value]) => (\r\n          <tr key={`colony_resources_${key}`}><td>{key}</td><td>{value}</td></tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyResources;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {colonyObjects} from \"../../GameData/colonyObjects\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Purchasable from \"../controls/purchasable/purchasable\";\r\nimport FabricatePricingFunction from \"../../Util/FabricatePricingFunction\";\r\nimport {addBuilding} from \"../../Redux/actions\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\n\r\nfunction ColonyBuildingsPanel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const buildings = useShallowEqualSelector(state => state.colony.buildings);\r\n  const resources = useSelector(state => state.resources.colonyResources)\r\n\r\n  const mapObject = Object.entries(colonyObjects).map(([key, value]) => ({...value, key}))\r\n  return (\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {mapObject.map((details, index) => {\r\n          if (index === 0 || buildings[mapObject[index - 1].key] > 0) {\r\n            return (\r\n              <Grid item xs={12} key={`buildings_option_${details.key}`}>\r\n                <Purchasable\r\n                  title={details.title}\r\n                  subtitle={details.subtitle}\r\n                  altText={`${details.workers} workers /building`}\r\n                  owned={buildings[details.key]}\r\n                  price={FabricatePricingFunction(details, buildings[details.key] ?? 0)}\r\n                  disabled={resources < FabricatePricingFunction(details, buildings[details.key] ?? 0)}\r\n                  onPurchase={() => {\r\n                    dispatch(addBuilding(details.key, buildings[details.key], FabricatePricingFunction(details, buildings[details.key] ?? 0)));\r\n                  }}\r\n                />\r\n              </Grid>\r\n            )\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ColonyBuildingsPanel;","import React from 'react';\r\nimport classes from \"./assignments.module.css\";\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {assignColonist, unAssignColonist} from \"../../../Redux/actions\";\r\n\r\nAssignmentControl.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  assigned: PropTypes.number,\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nfunction AssignmentControl({name, assigned, subtitle}) {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <div className={classes.controlWrapper}>\r\n      <Grid container>\r\n        <Grid item xs={8} className={classes.titles}>\r\n          <h2>{name}</h2>\r\n          <p>{subtitle}</p>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.controls}>\r\n          <div className={classes.assignedCount}>\r\n            <h1>{assigned ?? 0}</h1>\r\n          </div>\r\n          <div className={classes.up}>\r\n            <IconButton size={'small'} onClick={() => dispatch(assignColonist(name))}>\r\n              <KeyboardArrowUpIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.down}>\r\n            <IconButton size={'small'} onClick={() => dispatch(unAssignColonist(name))}>\r\n              <KeyboardArrowDownIcon/>\r\n            </IconButton>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentControl;\r\n\r\n\r\n","import React from 'react';\r\nimport {useShallowEqualSelector} from \"../../../Hooks/useShallowEqualSelector\";\r\nimport AssignmentControl from \"./assignmentControl\";\r\nimport {getColonyResourcesPerSecond} from \"../../../Redux/selectors\";\r\nimport {colonyObjects} from \"../../../GameData/colonyObjects\";\r\n\r\nfunction ColonyAssignmentsPanel() {\r\n  const assignments = useShallowEqualSelector(state => state.colony.assignments);\r\n  const colonyIncomes = useShallowEqualSelector(getColonyResourcesPerSecond);\r\n\r\n\r\n  const generateSubtitle = (details, count) => {\r\n    let s = [];\r\n    for (const input of details.inputs) {\r\n      s.push(`-${input.numerator * count} ${input.name} /${input.denominator}s`)\r\n    }\r\n    for (const output of details.outputs) {\r\n      s.push(`+${output.numerator * count} ${output.name} /${output.denominator}s`)\r\n    }\r\n    return s.join(\", \")\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(assignments).map(([key, value]) => {\r\n        const details = colonyObjects[key];\r\n        if(!details) return null;\r\n        return(\r\n            <AssignmentControl key={`assignments_${key}`} name={key} assigned={value} subtitle={generateSubtitle(details, value)}/>\r\n          )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyAssignmentsPanel;","import React from 'react';\r\nimport {Divider, Grid} from \"@material-ui/core\";\r\nimport CommunicationsPanel from \"../../Components/communications/communicationsPanel\";\r\nimport classes from \"./colony.module.css\";\r\nimport ColonyOverview from \"../../Components/colonyDisplays/colonyOverview\";\r\nimport ColonyResources from \"../../Components/colonyDisplays/colonyResources\";\r\nimport ColonyBuildingsPanel from \"../../Components/colonyDisplays/colonyBuildingsPanel\";\r\nimport ColonyAssignmentsPanel from \"../../Components/colonyDisplays/assignments/colonyAssignmentsPanel\";\r\n\r\nfunction Colony() {\r\n  return (\r\n    <Grid container spacing={2} className={classes.wrapper}>\r\n      <Grid item md={4}>\r\n        {/*<h1>Communications</h1>*/}\r\n        {/*<Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>*/}\r\n        <CommunicationsPanel/>\r\n      </Grid>\r\n      <Grid item md={4}>\r\n        <ColonyOverview/>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <ColonyResources />\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <ColonyAssignmentsPanel />\r\n      </Grid>\r\n      <Grid item md={4}>\r\n        <h1 style={{margin: 0}}>Buildings</h1>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <ColonyBuildingsPanel/>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Colony;","import React from 'react';\r\nimport classes from \"./pageSwitcher.module.css\";\r\nimport {Button, ButtonGroup} from \"@material-ui/core\";\r\nimport {useLocation, useHistory} from \"react-router-dom\";\r\n\r\nfunction PageSwitcher(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <ButtonGroup fullWidth>\r\n        <Button\r\n          variant={location.pathname === \"/\" ? \"contained\" :\"outlined\"}\r\n          onClick={() => history.push('/')}\r\n        >System</Button>\r\n        <Button\r\n          variant={location.pathname === \"/colony\" ? \"contained\" :\"outlined\"}\r\n          onClick={() => history.push('/colony')}\r\n        >Colony</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageSwitcher;","import './App.css';\nimport Main from \"./Pages/main/main\";\nimport GameManager from \"./Components/gameManager\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\n\nimport Colony from \"./Pages/colony/Colony\";\nimport PageSwitcher from \"./Components/controls/pageSwitcher/pageSwitcher\";\nimport {useSelector} from \"react-redux\";\n\nfunction App() {\n  const prestige = useSelector(state => state.game.prestige);\n  const paused = useSelector(state => state.game.paused);\n\n  return (\n    <div style={{padding: '8px'}}>\n      <Router>\n        <GameManager/>\n        {\n          prestige > 0 &&\n          <PageSwitcher/>\n        }\n\n        <Switch>\n          {\n            prestige > 0 &&\n            <Route path={'/colony'}>\n              <Colony/>\n            </Route>\n          }\n\n          <Route>\n            <Main/>\n          </Route>\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  ADD_BUILDING,\r\n  ADD_INCOME_SOURCE,\r\n  BUY_UPGRADE,\r\n  DECREASE_RESOURCES,\r\n  INCREASE_RESOURCES,\r\n  PRESTIGE\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  current: 0,\r\n  colonyResources: 0\r\n};\r\n\r\nexport default function resources(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREASE_RESOURCES: {\r\n      return {\r\n        ...state,\r\n        current: state.current += action.payload\r\n      };\r\n    }\r\n    case DECREASE_RESOURCES: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload, 0)\r\n      };\r\n    }\r\n    case ADD_INCOME_SOURCE: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload.price, 0)\r\n      }\r\n    }\r\n    case BUY_UPGRADE: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload.price, 0)\r\n      }\r\n    }\r\n    case ADD_BUILDING:{\r\n      return {\r\n        ...state,\r\n        colonyResources: state.colonyResources - action.payload.price\r\n      }\r\n    }\r\n    case PRESTIGE: {\r\n      const keepPercent = action.payload.keepPercent;\r\n      const keepAmount = Math.ceil(state.current * keepPercent);\r\n      return {\r\n        ...state,\r\n        current: 0,\r\n        colonyResources: state.colonyResources + keepAmount\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_INCOME_SOURCE, PRESTIGE} from \"../actionTypes\";\r\nimport {fabObjects} from \"../../GameData/FabObjects\";\r\n\r\n\r\nconst initialState = Object.keys(fabObjects).reduce((a, r) => {\r\n  a[r] = 0;\r\n  return a;\r\n}, {})\r\n\r\nexport default function sources(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_INCOME_SOURCE: {\r\n      return {\r\n        ...state,\r\n        [action.payload.type]: state[action.payload.type] += 1\r\n      };\r\n    }\r\n    case PRESTIGE:{\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {BUY_UPGRADE, PRESTIGE} from \"../actionTypes\";\r\n\r\nconst initialState = []\r\n\r\nexport default function upgrades(state = initialState, action) {\r\n  switch (action.type) {\r\n    case BUY_UPGRADE: {\r\n      return [...new Set([...state, action.payload.id])];\r\n    }\r\n    case PRESTIGE:{\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_INCOME_SOURCE, ADD_MESSAGE, BUY_UPGRADE, CLEAR_MESSAGES, PRESTIGE, RECEIVE_MESSAGE} from \"../actionTypes\";\r\nimport {fabObjects} from \"../../GameData/FabObjects\";\r\nimport {ResearchObjects} from \"../../GameData/ResearchObjects\";\r\n\r\nconst initialState = [\r\n  {\r\n    message: \"Wakey wakey, logs indicate you've been asleep for 93 years. We have arrived at the destination, \" +\r\n      \" asteroid designation 'AX62'. <br/><br/> <strong>Trip Debrief:</strong> We are aproximatly 57,000AU from earth making light speed \" +\r\n      \"communication delay 329 days or just over 2 years round trip. During transit we encounted 33 micrometeorite collisions resulting \" +\r\n      \"in damage to our long range communication equipment. All other systems are above 95% active health. <br/><br/>\" +\r\n      \"I am <strong>IAN</strong> and will be your insanity avoidance AI for the remainder of your time in the Oort Cloud.\",\r\n    received: true,\r\n    delay: 1,\r\n    index: 0,\r\n  },\r\n];\r\n\r\nexport default function communications(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      return [...state, {...action.payload, received: false, index: state.length}];\r\n    }\r\n    case RECEIVE_MESSAGE:{\r\n      let copy = [...state];\r\n      let msg = copy.find(x => x.index === action.payload.index);\r\n      if(msg){\r\n        msg.received = true;\r\n      }\r\n      return copy;\r\n    }\r\n    case CLEAR_MESSAGES:{\r\n      return [];\r\n    }\r\n    case PRESTIGE:{\r\n      return [];\r\n    }\r\n    case ADD_INCOME_SOURCE: {\r\n      const {type, count, prestige} = action.payload;\r\n      if(prestige > 0) return state;\r\n      if(count === 0 && fabObjects[type].message){\r\n        return [...state, {message: fabObjects[type].message, delay:3, received: false, index: state.length}];\r\n      }else{\r\n        return state;\r\n      }\r\n    }\r\n    case BUY_UPGRADE:{\r\n      const {id, prestige} = action.payload;\r\n      if(prestige > 0) return state;\r\n\r\n      const research = ResearchObjects.find(x => x.id === id);\r\n      if(research?.message){\r\n        return [...state, {message: research.message, delay:3, received: false, index: state.length}];\r\n      }else{\r\n        return state;\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {CLOSE_STORY, PRESTIGE, TOGGLE_PAUSE} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  paused: false,\r\n  prestige: 0,\r\n  storyShow: {\r\n    meetColony: false,\r\n  }\r\n};\r\n\r\nexport default function game(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_PAUSE: {\r\n      return {\r\n        ...state,\r\n        paused: !state.paused\r\n      };\r\n    }\r\n    case PRESTIGE: {\r\n      let newState = {...state, prestige: state.prestige + 1}\r\n      if (newState.prestige === 1) {\r\n        // if it is the first prestige, trigger the story event to meet the colony\r\n        newState.storyShow.meetColony = true;\r\n        newState.paused = true;\r\n      }\r\n      return newState\r\n    }\r\n    case CLOSE_STORY: {\r\n      return {\r\n        ...state,\r\n        paused: false,\r\n        storyShow: {\r\n          ...state.storyShow,\r\n          [action.payload.type]: false\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_BUILDING, ADD_COLONIST,\r\n  ASSIGN_COLONIST,\r\n  DECREASE_COLONY_RESOURCE,\r\n  INCREASE_COLONY_RESOURCE,\r\n  UN_ASSIGN_COLONIST\r\n} from \"../actionTypes\";\r\nimport {colonyObjects} from \"../../GameData/colonyObjects\";\r\n\r\nconst initialState = {\r\n  population: 5,\r\n  buildings: {},\r\n  assignments: {},\r\n  resources: {}\r\n}\r\n\r\n\r\nexport default function colony(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_COLONIST:{\r\n      return {\r\n        ...state,\r\n        population: Math.max(state.population + action.payload.count, 1)\r\n      }\r\n    }\r\n    case INCREASE_COLONY_RESOURCE: {\r\n      let resourcesCopy = {...state.resources};\r\n      for (const [key, value] of Object.entries(action.payload.increases)) {\r\n        resourcesCopy[key] = (state.resources[key] ?? 0) + value;\r\n      }\r\n      return {\r\n        ...state,\r\n        resources: resourcesCopy\r\n      };\r\n    }\r\n    case DECREASE_COLONY_RESOURCE: {\r\n      let resourcesCopy = {...state.resources};\r\n      for (const [key, value] of Object.entries(action.payload.decreases)) {\r\n        if(!resourcesCopy[key]) continue;\r\n        resourcesCopy[key] = Math.max((resourcesCopy[key] ?? 0) - value, 0);\r\n      }\r\n      // if(Object.keys(resourcesCopy).length === 0) return state;\r\n      return {\r\n        ...state,\r\n        resources: resourcesCopy\r\n      }\r\n    }\r\n    case ADD_BUILDING: {\r\n      const type = action.payload.type;\r\n      const details = colonyObjects[type];\r\n\r\n      //initialize new resources if there are any\r\n      let newResources = {};\r\n      for (const output of details.outputs) {\r\n        newResources[output.name] = state.resources[output.name] ?? 0\r\n      }\r\n      for (const input of details.inputs) {\r\n        newResources[input.name] = state.resources[input.name] ?? 0\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        buildings: {\r\n          ...state.buildings,\r\n          [type]: (state.buildings[type] ?? 0) + 1\r\n        },\r\n        resources: {\r\n          ...state.resources,\r\n          ...newResources\r\n        },\r\n        assignments: {\r\n          ...state.assignments,\r\n          [type]: state.assignments[type] ?? 0\r\n        }\r\n      }\r\n    }\r\n    case ASSIGN_COLONIST: {\r\n      const type = action.payload.type;\r\n      let assignmentCopy = {...state.assignments}\r\n      // check that we are not at out max assigned\r\n      const details = colonyObjects[action.payload.type]\r\n      const maxAssigned = details.workers * state.buildings[action.payload.type];\r\n      if(state.assignments[action.payload.type] >= maxAssigned) return state;\r\n      // figure out if we already have assigned all available colonists -> remove one at random\r\n      const totalAssigned = Object.values(state.assignments).reduce((a, r) => a + r, 0);\r\n      let diff = totalAssigned + 1 - state.population;\r\n      for (let i = 0; i < diff; i++) {\r\n        // find the first property with > 0 assigned colonists\r\n        for (const [key, value] of Object.entries(assignmentCopy)) {\r\n          if (value > 0 && key !== type){\r\n            assignmentCopy[key] -= 1;\r\n            diff -= 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      assignmentCopy[type] = Math.min((assignmentCopy[type] ?? 0) + 1, maxAssigned, state.population);\r\n      return {\r\n        ...state,\r\n        assignments: assignmentCopy\r\n      }\r\n    }\r\n    case UN_ASSIGN_COLONIST: {\r\n      const type = action.payload.type;\r\n      let assignmentCopy = {...state.assignments}\r\n      assignmentCopy[type] = Math.max((assignmentCopy[type] ?? 0) - 1, 0);\r\n      return {\r\n        ...state,\r\n        assignments: assignmentCopy\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport resources from \"./resources\";\r\nimport sources from \"./sources\";\r\nimport upgrades from \"./upgrades\";\r\nimport communications from \"./communications\";\r\nimport game from \"./game\";\r\nimport colony from \"./colony\";\r\nimport {RESET} from \"../actionTypes\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst appReducer = combineReducers({ resources, sources, upgrades, communications, game, colony});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if(action.type === RESET){\r\n    storage.removeItem('persist:root');\r\n    return appReducer(undefined, action);\r\n  }else{\r\n    return appReducer(state, action);\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nlet store = createStore(persistedReducer, composeEnhancers(applyMiddleware()))\r\nlet persistor = persistStore(store)\r\n\r\nexport { store, persistor }","import {createTheme} from \"@material-ui/core\";\r\n\r\nexport default createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store, persistor} from \"./Redux/store\";\nimport { MuiThemeProvider} from \"@material-ui/core\";\nimport darkTheme from \"./Theme/darkTheme\";\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <MuiThemeProvider theme={darkTheme}>\n          <App/>\n        </MuiThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}