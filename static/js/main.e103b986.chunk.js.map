{"version":3,"sources":["Components/colonyDisplays/assignments/assignments.module.css","Components/controls/purchasable/purchasable.module.css","Components/communications/communications.module.css","Pages/main/main.module.css","Components/controls/modal/modal.module.css","Pages/colony/colony.module.css","Components/controls/LaunchButton/launchPanel.module.css","Components/planetDisplay/planetDisplay.module.css","Components/story/firstPrestige/meetColony.module.css","Components/controls/pageSwitcher/pageSwitcher.module.css","GameData/FabObjects.js","GameData/ResearchObjects.js","GameData/colonyObjects.js","Redux/selectors.js","Util/FormatInt.js","Components/resourceDisplay/resourceDisplay.jsx","Components/planetDisplay/planetDisplay.jsx","Components/controls/purchasable/purchasable.jsx","Redux/actionTypes.js","Redux/actions.js","Util/FabricatePricingFunction.js","Components/fabricatePanel.jsx","Components/researchPanel.jsx","Util/CheckResearchUnlockable.js","Hooks/useShallowEqualSelector.js","Components/communications/communicationsPanel.jsx","Components/controls/modal/modal.jsx","Components/controls/LaunchButton/launchPanel.jsx","Hooks/useKeepPercent.js","Pages/main/main.jsx","Hooks/useInterval.js","Components/story/firstPrestige/meetColonyDialogPopup.jsx","Components/gameManager.jsx","Hooks/usePaused.js","Components/colonyDisplays/colonyOverview.jsx","Components/colonyDisplays/colonyResources.jsx","Components/colonyDisplays/colonyBuildingsPanel.jsx","Components/colonyDisplays/assignments/assignmentControl.jsx","Components/colonyDisplays/assignments/sacrifice.jsx","Components/colonyDisplays/assignments/colonyAssignmentsPanel.jsx","Components/colonyDisplays/colonyAssignmentsHeader.jsx","GameData/colonyUpgrades.js","Components/colonyDisplays/engineering/engineeringPanel.jsx","Pages/colony/Colony.jsx","Components/controls/pageSwitcher/pageSwitcher.jsx","App.js","reportWebVitals.js","Redux/reducers/resources.js","Redux/reducers/sources.js","Redux/reducers/upgrades.js","Redux/reducers/communications.js","Redux/reducers/game.js","Redux/reducers/colony.js","Redux/reducers/index.js","Redux/store.js","Theme/darkTheme.js","index.js"],"names":["module","exports","fabObjects","spaceNet","title","subtitle","basePrice","costMultiFactor","baseIncome","message","drone","probe","lander","miningRig","droneFactory","launchFacility","spaceElevator","ResearchObjects","id","multiplier","fabType","dependencies","colonyObjects","hydroponics","workers","inputs","outputs","name","numerator","denominator","engineer","cook","medic","scout","breeder","sacrifice","worshipper","getResources","store","resources","current","getIncomeSources","sources","getSourceCurrentIncomes","colony","research","includes","incomes","Object","entries","sourceType","count","fabDetails","upgrades","upgradeId","upgrade","find","x","getIncomePerSecond","total","getResearched","getColonyResources","resourcesCopy","key","value","Math","floor","getColonyResourcesPerSecond","multipliers","reduce","a","loop","assignments","details","incomesCopy","input","inputRate","output","outputRate","biomass","tech","meds","favour","population","getColonistAssignments","listenCommunications","communications","slice","reverse","formatInt","number","toFixed","replace","ResourceDisplay","useSelector","incomePerSecond","style","textAlign","marginBottom","FormatInt","marginTop","opacity","float","clear","PlanetDisplay","className","classes","planetDisplay","width","Purchasable","altText","owned","price","onPurchase","disabled","purchasable","ButtonBase","onClick","innerWrapper","join","content","content2","marginLeft","min","RESET","INCREASE_RESOURCES","DECREASE_RESOURCES","ADD_INCOME_SOURCE","BUY_UPGRADE","ADD_MESSAGE","RECEIVE_MESSAGE","CLEAR_MESSAGES","TOGGLE_PAUSE","PRESTIGE","CLOSE_STORY","ADD_BUILDING","ADD_COLONIST","INCREASE_COLONY_RESOURCE","DECREASE_COLONY_RESOURCE","ASSIGN_COLONIST","UN_ASSIGN_COLONIST","COLONY_RESEARCH","addMessage","delay","type","payload","addColonist","increaseColonyResources","increases","decreaseColonyResources","decreases","assignColonist","fabricatePricingFunction","fabItem","pow","FabricatePanel","dispatch","useDispatch","currentIncomeSources","prestige","state","game","mapObject","map","Grid","container","spacing","index","item","xs","FabricatePricingFunction","addIncomeSource","ResearchPanel","researched","purchasedUpgrades","incomeSources","some","dependency","CheckResearchUnlockable","multi","buyUpgrade","useShallowEqualSelector","selector","shallowEqual","CommunicationsPanel","messages","formatMsg","msg","startsWith","substring","isImportant","wrapper","direction","received","priorityMessage","dangerouslySetInnerHTML","__html","startDelay","onTypingDone","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","Modal","open","actions","children","backdrop","length","action","Button","variant","color","label","LaunchPanel","num","launchFacilityCount","currentPrestige","keepPercent","useState","factor","setFactor","elevatorCount","eq","useEffect","useKeepPercent","launchConfirmation","setLaunchConfirmation","launchConfirmActions","display","flexDirection","alignItems","launchText","subtext","fullWidth","Divider","backgroundColor","margin","Main","openTab","setOpenTab","height","justify","sm","md","sidePanel","overflow","comsWrapper","ButtonGroup","useInterval","callback","savedCallback","useRef","last","performance","now","init","setInterval","time","delta","clearInterval","MeetColonyDialogPopup","storyShow","meetColony","setDoneTyping","typistWrapper","fontSize","Delay","ms","GameManager","colonyIncomes","colonyResources","building","buildings","paused","goneHungry","setGoneHungry","console","log","foodRequired","wellFed","food","takenFromFood","takenFromBiomass","hungry","event","prev","random","severity","ceil","keys","chosen","amount","window","resetGame","addResources","ColonyOverview","paddingTop","justifyContent","ColonyResources","ColonyBuildingsPanel","AssignmentControl","assigned","controlWrapper","titles","controls","assignedCount","up","IconButton","size","down","Sacrifice","fontStyle","fontFamily","blood","ColonyAssignmentsPanel","generateSubtitle","s","push","ColonyAssignmentsHeader","props","values","r","colonyUpgrades","steel","EngineeringPanel","colonyResearch","colonyBuildings","checkResources","purchase","filter","y","Colony","Tooltip","arrow","placement","disableHoverListener","Boolean","disableTouchListener","disableFocusListener","PageSwitcher","location","useLocation","history","useHistory","pathname","App","padding","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","appReducer","combineReducers","max","keepAmount","Set","copy","newState","diff","abs","assignmentsCopy","subAmount","newResources","assignmentCopy","maxAssigned","totalAssigned","i","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","persistedReducer","persistReducer","removeItem","undefined","createStore","applyMiddleware","persistor","persistStore","createTheme","palette","ReactDOM","render","StrictMode","loading","theme","darkTheme","document","getElementById"],"mappings":"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","file":"static/js/main.e103b986.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlWrapper\":\"assignments_controlWrapper__1Vt46\",\"titles\":\"assignments_titles__UzqUJ\",\"controls\":\"assignments_controls__35xmT\",\"up\":\"assignments_up__2DFGc\",\"down\":\"assignments_down__28gf3\",\"assignedCount\":\"assignments_assignedCount__3rnZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"purchasable\":\"purchasable_purchasable__26Bmy\",\"innerWrapper\":\"purchasable_innerWrapper__1BvjA\",\"disabled\":\"purchasable_disabled__1T2uz\",\"content\":\"purchasable_content__11xw4\",\"content2\":\"purchasable_content2__1IbH-\",\"owned\":\"purchasable_owned__1Rpee\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"communications_wrapper__3qRre\",\"message\":\"communications_message__3vtW6\",\"priorityMessage\":\"communications_priorityMessage__1Nwzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidePanel\":\"main_sidePanel__2bUyy\",\"comsWrapper\":\"main_comsWrapper__3jO9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"modal_backdrop__19mz5\",\"wrapper\":\"modal_wrapper__2UEXh\",\"actions\":\"modal_actions__1e5yH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"colony_wrapper__4WcZW\",\"sidePanel\":\"colony_sidePanel__1qx3m\",\"comsWrapper\":\"colony_comsWrapper__1Lw8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"launchText\":\"launchPanel_launchText__FT86o\",\"subtext\":\"launchPanel_subtext__3dYVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planetDisplay\":\"planetDisplay_planetDisplay__2xmBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typistWrapper\":\"meetColony_typistWrapper__3SuDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pageSwitcher_wrapper__3NFYx\"};","export const fabObjects = {\r\n  spaceNet: {\r\n    title: 'Space Net',\r\n    subtitle: \"Catches things that float into the nets\",\r\n    basePrice: 25,\r\n    costMultiFactor: 1.07,\r\n    baseIncome: 1,\r\n    message: \"Nets? In Space? You wont catch any fish but you might catch some stray rocks or aliens or something. \" +\r\n      \"Anything we catch in the nets will be melted down and processed into raw materials to use with the fabricators.\"\r\n  },\r\n  drone: {\r\n    title: 'Drone',\r\n    subtitle: \"Orbits the target and automatically mines using lasers\",\r\n    basePrice: 500,\r\n    costMultiFactor: 1.08,\r\n    baseIncome: 10,\r\n    message: \"Drones will be able to get in much closer the the surface of the object.\"\r\n  },\r\n  probe: {\r\n    title: 'Probe',\r\n    subtitle: \"Launch a probe to drill core samples from the surface\",\r\n    basePrice: 5500,\r\n    costMultiFactor: 1.09,\r\n    baseIncome: 75,\r\n    message: \"\"\r\n  },\r\n  lander: {\r\n    title: 'Lander',\r\n    subtitle: \"Send a small lander to the surface to do mobile excavation\",\r\n    basePrice: 85000,\r\n    costMultiFactor: 1.10,\r\n    baseIncome: 250,\r\n    message: \"Small little land rovers similar to the ones the Inter-Planetary Union used to survey Mars before its colonization.\"\r\n  },\r\n  miningRig: {\r\n    title: 'Mining Rig',\r\n    subtitle: \"Establish a semi-permanent mining structure on the surface\",\r\n    basePrice: 500000,\r\n    costMultiFactor: 1.11,\r\n    baseIncome: 850,\r\n    message: \"We have established a proper mining facility on the surface. We can now really start to screw this place up.\"\r\n  },\r\n  droneFactory: {\r\n    title: 'Drone Factory',\r\n    subtitle: \"No it does not make more drones, it is run by drones\",\r\n    basePrice: 2500000,\r\n    costMultiFactor: 1.12,\r\n    baseIncome: 2000,\r\n    message: \"Surprise! The factory actually does make more drones, what a deal!\"\r\n  },\r\n  launchFacility: {\r\n    title: 'Orbital Launch',\r\n    subtitle: \"A proper orbital launch facility will allow us to get resources off the surface of this rock\",\r\n    basePrice: 10000000,\r\n    costMultiFactor: 1.44,\r\n    baseIncome: 2500,\r\n    message: \"!We can now get resources into orbit and return to Earth with our spoils. With only 1 launch facility \" +\r\n      \"we won't be able to get much into orbit though. Build more launch facilities and space elevators to increase \" +\r\n      \"how much of our resources we can take back with us.\"\r\n  },\r\n  spaceElevator: {\r\n    title: 'Space Elevator',\r\n    subtitle: \"A space elevator will help us get even more resources into orbit before we blast back to earth rich\",\r\n    basePrice: 50000000,\r\n    costMultiFactor: 1.55,\r\n    baseIncome: 3500,\r\n    message: \"The more orbital launch facilities and space elevators we have when we launch for earth the more of the resources \" +\r\n      \"we have extracted we will be able to take with us.\"\r\n  },\r\n}","\r\n\r\nexport const ResearchObjects = [\r\n  // SPACE NET\r\n  {\r\n    id: \"sn1\",\r\n    title: 'Improved Space Nets',\r\n    subtitle: \"Bigger nets = more space junk. This one is pretty self-explanatory\",\r\n    message: \"Double the size of the nets, if you make these nets any bigger we might actually catch some space fish.\",\r\n    multiplier: 2,\r\n    fabType: 'spaceNet',\r\n    basePrice: 10000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'sn2',\r\n    title: 'Improved Space Nets II',\r\n    subtitle: \"Have you have tried eating soup off a plate? We made the nets more like bowls now\",\r\n    message: \"Did that make sense? Bowls?... the nets are deeper now so we can catch bigger stuff, kind of like a baseball glove.\",\r\n    multiplier: 2,\r\n    fabType: 'spaceNet',\r\n    basePrice: 30000,\r\n    dependencies: ['sn1']\r\n  },\r\n  {\r\n    id: 'sn3',\r\n    title: 'Improved Space Nets III',\r\n    subtitle: \"We added titanium threads to the net to catch more volatile space junk like meteorites or knives\",\r\n    message: \"We doubled the efficiency of the nets again, I think that makes it 3^6 or !(2^3) times better. They are \" +\r\n      \"stronger now so we can catch pretty much anything.\",\r\n    multiplier: 3,\r\n    fabType: 'spaceNet',\r\n    basePrice: 550000,\r\n    dependencies: ['sn2']\r\n  },\r\n  // DRONES\r\n  {\r\n    id: 'dr1',\r\n    title: 'Improved Drones I',\r\n    subtitle: \"Improved drone batteries and auto pilot software lets us more efficiently control more drones without crashing them into each other\",\r\n    message: \"We didnt actually improve anything, we just put extra batteries on them its not astrophysics.\",\r\n    multiplier: 1.65,\r\n    fabType: 'drone',\r\n    basePrice: 125000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'dr2',\r\n    title: 'Improved Drones II',\r\n    subtitle: \"Improved aerial reconnaissance lets the drones find more mineral rich deposits to improve their efficiency\",\r\n    message: \"Would you believe it if I told you before this upgrade I was controlling every single one of these drones?\",\r\n    multiplier: 2,\r\n    fabType: 'drone',\r\n    basePrice: 225000,\r\n    dependencies: ['dr1']\r\n  },\r\n  // PROBE\r\n  {\r\n    id: 'pr1',\r\n    title: 'Improved Probes I',\r\n    subtitle: \"More powerful onboard generators allow us to probe deeper\",\r\n    message: \"Each probe is now equipped with a thermo-radio isotope generator capable of up to 500W. Dont ask where we got the radioactive material, \" +\r\n      \"also... check yourself regularly.\",\r\n    multiplier: 1.3,\r\n    fabType: 'probe',\r\n    basePrice: 1375000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'pr2',\r\n    title: 'Improved Probes II',\r\n    subtitle: \"Liquid cooling vents let the probes drill harder and for longer\",\r\n    message: \"The probes can now scan for sub-surface liquids, drill for said liquids, and re-circulate the liquid through \" +\r\n      \"its drilling mantle. Pretty clever.\",\r\n    multiplier: 1.55,\r\n    fabType: 'probe',\r\n    basePrice: 6875000,\r\n    dependencies: ['pr1']\r\n  },\r\n  // PROBE\r\n  {\r\n    id: 'ld1',\r\n    title: 'Improved Landers I',\r\n    subtitle: \"Improve the lander with a bigger drilling bit and a tiny shovel. We also gave them emotions, but only sadness so they feel bad when they keep getting stuck in holes\",\r\n    message: \"Each land rover now feels an overwhelming sadness when it gets stuck on rocks and in holes. My research \" +\r\n      \"seems to indicate this will make them try harder to not get stuck in holes but somehow \" +\r\n      \"I think we might just end up with depressed probes.\",\r\n    multiplier: 1.25,\r\n    fabType: 'lander',\r\n    basePrice: 21250000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'ld2',\r\n    title: 'Improved Landers II',\r\n    subtitle: \"These guys are so cute, we gave them little backpacks too so they could... cary more stuff?\",\r\n    message: \"Depressed little surface trucks... but with accessories!\",\r\n    multiplier: 1.25,\r\n    fabType: 'lander',\r\n    basePrice: 106250000,\r\n    dependencies: ['ld1']\r\n  },\r\n  {\r\n    id: 'mr1',\r\n    title: 'Improved Mining Rigs I',\r\n    subtitle: \"Improve the mining capabilities of the rig with ancient alien technology\",\r\n    message: \"The ancient alien technology is... diesel... Yes technically the aliens have been dead for a while. \" +\r\n      \"We did say ancient.\",\r\n    multiplier: 1.25,\r\n    fabType: 'miningRig',\r\n    basePrice: 300000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'mr2',\r\n    title: 'Improved Mining Rigs II',\r\n    subtitle: \"Improve the mining capabilities of the rig with ancient alien technology\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'miningRig',\r\n    basePrice: 1500000000,\r\n    dependencies: [\"mr1\"]\r\n  },\r\n  {\r\n    id: 'df1',\r\n    title: 'Improved Drone Factory I',\r\n    subtitle: \"We make more drones that make more drones that make more drones...\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'droneFactory',\r\n    basePrice: 187500000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'df2',\r\n    title: 'Improved Drone Factory II',\r\n    subtitle: \"We make more drones that make more drones that make more drones...\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'droneFactory',\r\n    basePrice: 937500000,\r\n    dependencies: [\"df1\"]\r\n  },\r\n  {\r\n    id: 'lf1',\r\n    title: 'Improved Launch Facility I',\r\n    subtitle: \"A second launch pad will let us launch twice as many rockets\",\r\n    message: \"\",\r\n    multiplier: 1.25,\r\n    fabType: 'launchFacility',\r\n    basePrice: 2200000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'lf2',\r\n    title: 'Improved Launch Facility II',\r\n    subtitle: \"A third launch pad will let us launch three times as many rockets\",\r\n    message: \"\",\r\n    multiplier: 1.15,\r\n    fabType: 'launchFacility',\r\n    basePrice: 7600000000,\r\n    dependencies: [\"lf1\"]\r\n  },\r\n  {\r\n    id: 'se1',\r\n    title: 'Improved Space Elevator I',\r\n    subtitle: \"They said I could be anything so I became a space rope\",\r\n    message: \"\",\r\n    multiplier: 1.15,\r\n    fabType: 'spaceElevator',\r\n    basePrice: 20000000000,\r\n    dependencies: []\r\n  },\r\n  {\r\n    id: 'se2',\r\n    title: 'Improved Space Elevator II',\r\n    subtitle: \"Rope thicker rope stronger = bigger loads\",\r\n    message: \"\",\r\n    multiplier: 1.15,\r\n    fabType: 'spaceElevator',\r\n    basePrice: 40000000000,\r\n    dependencies: ['se1']\r\n  },\r\n]","export const colonyObjects = {\r\n  hydroponics: {\r\n    title: \"Hydroponics Lab\",\r\n    subtitle: \"A hydroponics lab will allow us to start growing our own plant matter. Its not tasty but at least we wont starve.\",\r\n    basePrice: 500,\r\n    costMultiFactor: 2,\r\n    workers: 3,\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: 'biomass',\r\n        numerator: 3,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n  engineer: {\r\n    title: \"Engineers Workshop\",\r\n    subtitle: \"Our systems are in dire need of maintenance, proper engineering training and tools would let us \" +\r\n      \"better maintain our life support and other systems\",\r\n    basePrice: 30000,\r\n    costMultiFactor: 1.5,\r\n    workers: 1,\r\n    inputs: [],\r\n    outputs: [\r\n      {\r\n        name: 'steel',\r\n        numerator: 3,\r\n        denominator: 60\r\n      },\r\n      {\r\n        name: 'tech',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n    ]\r\n  },\r\n  cook: {\r\n    title: \"Kitchen\",\r\n    subtitle: \"Cooking facilities will let us turn the biomass into proper food. Eating biomass sucks.\",\r\n    basePrice: 100000,\r\n    costMultiFactor: 1.5,\r\n    workers: 2,\r\n    inputs: [\r\n      {\r\n        name: 'biomass',\r\n        numerator: 4,\r\n        denominator: 60\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'food',\r\n        numerator: 4,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n  medic: {\r\n    title: \"Medical Center\",\r\n    subtitle: \"Modern medicine will be a huge benefit for us\",\r\n    basePrice: 200000,\r\n    costMultiFactor: 1.5,\r\n    workers: 1,\r\n    inputs: [\r\n      {\r\n        name: 'biomass',\r\n        numerator: 5,\r\n        denominator: 60\r\n      }\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'meds',\r\n        numerator: 1,\r\n        denominator: 60\r\n      }\r\n    ]\r\n  },\r\n  scout: {\r\n    title: \"Reclamation Squads\",\r\n    subtitle: \"Searching through the remains of society could reward us with lost technology, we may even find other survivors\",\r\n    basePrice: 500000,\r\n    costMultiFactor: 1.5,\r\n    workers: 2,\r\n    inputs: [\r\n      {\r\n        name: 'food',\r\n        numerator: 5,\r\n        denominator: 60\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'tech',\r\n        numerator: 5,\r\n        denominator: 60\r\n      },\r\n      {\r\n        name: 'meds',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n    ]\r\n  },\r\n  breeder: {\r\n    title: \"Breedery\",\r\n    subtitle: \"We need more colonists.\",\r\n    basePrice: 1500000,\r\n    costMultiFactor: 1.5,\r\n    workers: 2,\r\n    inputs: [\r\n      {\r\n        name: 'food',\r\n        numerator: 25,\r\n        denominator: 60\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'population',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n    ]\r\n  },\r\n  sacrifice: {\r\n    title: \"Sacrificial Chamber\",\r\n    subtitle: \"We have heard a call from the void that demands blood\",\r\n    basePrice: 3500000,\r\n    costMultiFactor: 1.5,\r\n    workers: 200, // all may worship at the temple of the great old ones\r\n    inputs: [],\r\n    outputs: []\r\n  },\r\n  worshipper: {\r\n    title: \"Temple to the Great Old Ones\",\r\n    subtitle: \"If we provide the Great Old Ones with tribute they will bestow upon us the gifts of the heavens\",\r\n    basePrice: 10000000,\r\n    costMultiFactor: 1.5,\r\n    workers: 200, // all may worship at the temple of the great old ones\r\n    inputs: [\r\n      {\r\n        name: 'steel',\r\n        numerator: 5,\r\n        denominator: 60\r\n      },\r\n      {\r\n        name: 'blood',\r\n        numerator: 5,\r\n        denominator: 60\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'favour',\r\n        numerator: 1,\r\n        denominator: 60\r\n      },\r\n    ]\r\n  },\r\n}\r\n\r\n\r\nexport const colonyMessages = [\r\n  \"We are having a celebration\"\r\n]","import {fabObjects} from \"../GameData/FabObjects\";\r\nimport {ResearchObjects} from \"../GameData/ResearchObjects\";\r\nimport {colonyObjects} from \"../GameData/colonyObjects\";\r\n\r\nexport const getResources = store => store.resources.current;\r\nexport const getIncomeSources = store => store.sources;\r\n\r\nexport const getSourceCurrentIncomes = store => {\r\n  let multiplier = 1;\r\n  if(store?.colony?.research?.includes('mining 1'))\r\n    multiplier *= 5;\r\n\r\n  let incomes = {}\r\n  for (const [sourceType, count] of Object.entries(store.sources)) {\r\n    const fabDetails = fabObjects[sourceType];\r\n    if (fabDetails){\r\n      for (const upgradeId of store.upgrades) {\r\n        const upgrade = ResearchObjects.find(x => x.id === upgradeId);\r\n        if(upgrade?.fabType === sourceType){\r\n          multiplier = multiplier * upgrade.multiplier;\r\n        }\r\n      }\r\n      incomes[sourceType] = fabDetails.baseIncome * count * multiplier;\r\n    }\r\n  }\r\n  return incomes;\r\n};\r\n\r\n\r\nexport const getIncomePerSecond = store => {\r\n  // global upgrades\r\n  let multiplier = 1;\r\n  if(store?.colony?.research?.includes('mining 1'))\r\n    multiplier *= 1.5;\r\n  if(store?.colony?.research?.includes('mining 2'))\r\n    multiplier *= 1.5;\r\n  if(store?.colony?.research?.includes('mining 3'))\r\n    multiplier *= 1.5;\r\n  if(store?.colony?.research?.includes('mining 4'))\r\n    multiplier *= 1.5;\r\n  if(store?.colony?.research?.includes('mining 5'))\r\n    multiplier *= 1.5;\r\n\r\n\r\n  // calculate the total income / second\r\n  let total = 0;\r\n  for (const [sourceType, count] of Object.entries(store.sources)) {\r\n    const fabDetails = fabObjects[sourceType];\r\n    if (fabDetails){\r\n      for (const upgradeId of store.upgrades) {\r\n        const upgrade = ResearchObjects.find(x => x.id === upgradeId);\r\n        if(upgrade?.fabType === sourceType){\r\n          multiplier = multiplier * upgrade.multiplier;\r\n        }\r\n      }\r\n      total += fabDetails.baseIncome * count * multiplier;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport const getResearched = store => {\r\n  return store.upgrades;\r\n}\r\n\r\nexport const getColonyResources = store => {\r\n  let resourcesCopy = {...store.colony.resources};\r\n  for (const [key, value] of Object.entries(resourcesCopy)) {\r\n    resourcesCopy[key] = Math.floor(value);\r\n  }\r\n  return resourcesCopy;\r\n}\r\n\r\nexport const getColonyResourcesPerSecond = store => {\r\n  let multipliers = Object.entries(colonyObjects)\r\n    .reduce((a, [key, value]) => {\r\n      for (const output of value.outputs) {\r\n        a[output.name] = 1;\r\n      }\r\n      for (const output of value.inputs) {\r\n        a[output.name] = 1;\r\n      }\r\n      return a;\r\n    }, {})\r\n  let incomes = {};\r\n  loop:\r\n  for (const [key, value] of Object.entries(store.colony.assignments)) {\r\n    const details = colonyObjects[key];\r\n    if(!details) continue;\r\n\r\n    // if there are inputs, make sure we have enough to proceed else abort\r\n    let incomesCopy = {...incomes}; // change the copy, if we cant pay all inputs the copy is discarded\r\n    for (const input of details.inputs) {\r\n      const inputRate = input.numerator/input.denominator * value;\r\n      if((store.colony.resources[input.name] ?? 0) < inputRate){\r\n        continue loop;\r\n      }else{\r\n        incomesCopy[input.name] = (incomesCopy[input.name] ?? 0) - inputRate;\r\n      }\r\n    }\r\n    incomes = incomesCopy;  // since we can pay all inputs, we use the copy\r\n    for (const output of details.outputs) {\r\n      const outputRate = output.numerator/output.denominator * value;\r\n      incomes[output.name] = (incomesCopy[output.name] ?? 0) + outputRate;\r\n    }\r\n  }\r\n\r\n\r\n  // apply multipliers\r\n  if(store.colony.research.includes(\"biomass efficiency 1\"))\r\n    multipliers.biomass *= 2;\r\n  if(store.colony.research.includes(\"biomass efficiency 2\"))\r\n    multipliers.biomass *= 2;\r\n  if(store.colony.research.includes(\"night vision goggles\")){\r\n    multipliers.tech *= 1.5;\r\n    multipliers.meds *= 1.25;\r\n  }\r\n  if(store.colony.research.includes(\"antibiotics\"))\r\n    multipliers.meds *= 1.75;\r\n  if(store.colony.research.includes(\"prayer beads\"))\r\n    multipliers.favour *= 2;\r\n  if(store.colony.research.includes(\"genetics\"))\r\n    multipliers.population *= 2;\r\n\r\n\r\n  // multiply income by multipliers\r\n  for (const [key, value] of Object.entries(incomes)) {\r\n    incomes[key] *= multipliers[key]\r\n  }\r\n\r\n  return incomes;\r\n}\r\n\r\nexport const getColonistAssignments = store => {\r\n  return store.colony.assignments;\r\n}\r\n\r\nexport const listenCommunications = store => {\r\n  return store.communications.slice(-20).reverse();\r\n}\r\n","export default function formatInt(number){\r\n  return number.toFixed().replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\r\n}","import {useSelector} from \"react-redux\";\r\nimport {getIncomePerSecond, getResources} from \"../../Redux/selectors\";\r\nimport FormatInt from \"../../Util/FormatInt\";\r\n\r\n\r\nexport default function ResourceDisplay(){\r\n  const resources = useSelector(getResources);\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n\r\n  return(\r\n    <div>\r\n      <h1 style={{textAlign: 'right', marginBottom: 0}}>{FormatInt(resources)}</h1>\r\n      <h2 style={{marginTop: '-10px', marginBottom: 0, opacity: 0.5, float: 'left'}}>Resources</h2>\r\n      <h2 style={{marginTop: '-10px', marginBottom: 0, opacity: 0.5, float: 'right'}}>{FormatInt(incomePerSecond)}/s</h2>\r\n      <div style={{clear: \"both\"}}/>\r\n    </div>\r\n  )\r\n}","import classes from \"./planetDisplay.module.css\";\r\n\r\nexport default function PlanetDisplay(){\r\n\r\n  return(\r\n    <div className={classes.planetDisplay}>\r\n      <h3 style={{opacity: 0.5, float: 'left', width: '49%'}}>Asteroid: AX62</h3>\r\n      <h3 style={{opacity: 0.5, textAlign: 'right', float: 'right', width: '49%'}}>000001.01.15</h3>\r\n      <h3 style={{opacity: 0.5, clear: 'both'}}>Resource Density: Low</h3>\r\n      <h3 style={{opacity: 0.5, clear: 'both'}}>Life: None</h3>\r\n    </div>\r\n  )\r\n}","import classes from \"./purchasable.module.css\";\r\nimport {ButtonBase} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormatInt from \"../../../Util/FormatInt\";\r\n\r\n\r\nexport default function Purchasable({title, subtitle, altText, owned, price, onPurchase, disabled}) {\r\n\r\n\r\n  return (\r\n    <div className={classes.purchasable}>\r\n      <ButtonBase style={{width: '100%'}} disabled={disabled} onClick={onPurchase}>\r\n        <div className={[classes.innerWrapper, disabled && classes.disabled].join(\" \")}>\r\n\r\n          <div className={classes.content} style={{width: owned >= 0 ? '60%' : '100%'}}>\r\n            <h1>{title}</h1>\r\n            <h3 style={{marginTop: 'auto'}}>{typeof price === 'number' ? FormatInt(price) : price}</h3>\r\n          </div>\r\n          <div className={classes.content2} style={{width: owned >= 0 ? '60%' : '100%'}}>\r\n            <p style={{marginBottom: '4px'}}>{subtitle}</p>\r\n            <p style={{opacity: 0.7, marginTop: 'auto'}}>{altText}</p>\r\n          </div>\r\n          {\r\n            owned >= 0 &&\r\n            <div style={{width: '40%', marginLeft: 'auto'}}>\r\n              <span className={classes.owned}>{Math.min(999, owned)}</span>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </ButtonBase>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nPurchasable.propTypes = {\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  altText: PropTypes.string,\r\n  owned: PropTypes.number,\r\n  price: PropTypes.number,\r\n  onPurchase: PropTypes.func,\r\n  disabled: PropTypes.bool\r\n};","export const RESET = 'RESET';\r\n\r\nexport const INCREASE_RESOURCES = \"INCREASE_RESOURCES\";\r\nexport const DECREASE_RESOURCES = \"DECREASE_RESOURCES\";\r\n\r\nexport const ADD_INCOME_SOURCE = \"ADD_INCOME_SOURCE\";\r\n\r\nexport const BUY_UPGRADE = \"BUY_UPGRADE\";\r\n\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const RECEIVE_MESSAGE = \"RECEIVE_MESSAGE\";\r\nexport const CLEAR_MESSAGES = \"CLEAR_MESSAGES\";\r\n\r\nexport const TOGGLE_PAUSE = \"TOGGLE_PAUSE\";\r\nexport const PRESTIGE = \"PRESTIGE\";\r\nexport const CLOSE_STORY = \"CLOSE_STORY\";\r\n\r\n// COLONY\r\nexport const ADD_BUILDING = \"ADD_BUILDING\";\r\nexport const ADD_COLONIST = \"ADD_COLONIST\";\r\nexport const INCREASE_COLONY_RESOURCE = \"INCREASE_COLONY_RESOURCE\";\r\nexport const DECREASE_COLONY_RESOURCE = \"DECREASE_COLONY_RESOURCE\";\r\nexport const ASSIGN_COLONIST = \"ASSIGN_COLONIST\";\r\nexport const UN_ASSIGN_COLONIST = \"UN_ASSIGN_COLONIST\";\r\nexport const COLONY_RESEARCH = \"COLONY_RESEARCH\";\r\n","import {\r\n  ADD_BUILDING, ADD_COLONIST,\r\n  ADD_INCOME_SOURCE,\r\n  ADD_MESSAGE,\r\n  ASSIGN_COLONIST,\r\n  BUY_UPGRADE,\r\n  CLEAR_MESSAGES,\r\n  CLOSE_STORY, COLONY_RESEARCH,\r\n  DECREASE_COLONY_RESOURCE,\r\n  DECREASE_RESOURCES,\r\n  INCREASE_COLONY_RESOURCE,\r\n  INCREASE_RESOURCES,\r\n  PRESTIGE,\r\n  RECEIVE_MESSAGE,\r\n  TOGGLE_PAUSE,\r\n  UN_ASSIGN_COLONIST,\r\n} from \"./actionTypes\";\r\n\r\nexport const increaseResources = (amount) => ({\r\n  type: INCREASE_RESOURCES,\r\n  payload: amount\r\n})\r\n\r\nexport const decreaseResources = (amount) => ({\r\n  type: DECREASE_RESOURCES,\r\n  payload: amount\r\n})\r\n\r\n/**\r\n *\r\n * @param type the type of income source to add\r\n * @param count the current count of this income source\r\n * @param price the price the income source currently costs\r\n */\r\nexport const addIncomeSource = (type, count, price, prestige) => ({\r\n  type: ADD_INCOME_SOURCE,\r\n  payload: {\r\n    type, count, price, prestige\r\n  }\r\n})\r\n\r\nexport const buyUpgrade = (id, price, prestige) => ({\r\n  type: BUY_UPGRADE,\r\n  payload: {\r\n    id,\r\n    price,\r\n    prestige\r\n  }\r\n})\r\n\r\nexport const addMessage = (message, delay = 3) => ({\r\n  type: ADD_MESSAGE,\r\n  payload: {\r\n    message,\r\n    delay\r\n  }\r\n})\r\n\r\nexport const receiveMessage = (index) => ({\r\n  type: RECEIVE_MESSAGE,\r\n  payload: {\r\n    index,\r\n  }\r\n})\r\n\r\nexport const clearMessages = (index) => ({\r\n  type: CLEAR_MESSAGES,\r\n  payload: {}\r\n})\r\n\r\nexport const togglePaused = () => ({\r\n  type: TOGGLE_PAUSE,\r\n  payload: {}\r\n})\r\n\r\nexport const prestige = (currentPrestige, keepPercent) => ({\r\n  type: PRESTIGE,\r\n  payload: {\r\n    currentPrestige,\r\n    keepPercent\r\n  }\r\n})\r\n\r\nexport const closeStory = (type) => ({\r\n  type: CLOSE_STORY,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\nexport const addColonist = (count) => ({\r\n  type: ADD_COLONIST,\r\n  payload: {\r\n    count\r\n  }\r\n})\r\n\r\nexport const increaseColonyResources = (increases) => ({\r\n  type: INCREASE_COLONY_RESOURCE,\r\n  payload: {\r\n    increases\r\n  }\r\n})\r\n\r\nexport const decreaseColonyResources = (decreases) => ({\r\n  type: DECREASE_COLONY_RESOURCE,\r\n  payload: {\r\n    decreases\r\n  }\r\n})\r\n\r\nexport const addBuilding = (type, count, price,) => ({\r\n  type: ADD_BUILDING,\r\n  payload: {\r\n    type,\r\n    count,\r\n    price\r\n  }\r\n})\r\n\r\nexport const assignColonist = (type) => ({\r\n  type: ASSIGN_COLONIST,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\nexport const unAssignColonist = (type) => ({\r\n  type: UN_ASSIGN_COLONIST,\r\n  payload: {\r\n    type\r\n  }\r\n})\r\n\r\nexport const ResearchColony = (key) => ({\r\n  type: COLONY_RESEARCH,\r\n  payload: {\r\n    research: key\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default function fabricatePricingFunction(fabItem, count){\r\n  return Math.floor(fabItem.basePrice * Math.pow(fabItem.costMultiFactor, count))\r\n}","import Purchasable from \"./controls/purchasable/purchasable\";\r\nimport {fabObjects} from \"../GameData/FabObjects\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIncomePerSecond, getIncomeSources, getResources, getSourceCurrentIncomes} from \"../Redux/selectors\";\r\nimport {addIncomeSource} from \"../Redux/actions\";\r\nimport FabricatePricingFunction from \"../Util/FabricatePricingFunction\";\r\nimport FormatInt from \"../Util/FormatInt\";\r\n\r\n\r\nexport default function FabricatePanel() {\r\n  const dispatch = useDispatch();\r\n  const sources = useSelector(getIncomeSources);\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n  const currentIncomeSources = useSelector(getSourceCurrentIncomes);\r\n  const resources = useSelector(getResources)\r\n  const prestige = useSelector(state => state.game.prestige);\r\n\r\n  const mapObject = Object.entries(fabObjects).map(([key, value]) => ({...value, key}))\r\n\r\n  return (\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {mapObject.map((details, index) => {\r\n          if (index === 0 || sources[mapObject[index - 1].key] > 0) {\r\n            return (\r\n              <Grid item xs={12} key={`fabrication_option_${details.key}`}>\r\n                <Purchasable\r\n                  title={details.title}\r\n                  subtitle={details.subtitle}\r\n                  altText={`${FormatInt((currentIncomeSources[details.key] / sources[details.key]) || details.baseIncome)}/s - ${(currentIncomeSources[details.key] / incomePerSecond * 100 || 0).toFixed(1)}% of total`}\r\n                  owned={sources[details.key]}\r\n                  price={FabricatePricingFunction(details, sources[details.key])}\r\n                  disabled={resources < FabricatePricingFunction(details, sources[details.key])}\r\n                  onPurchase={() => {\r\n                    dispatch(addIncomeSource(details.key, sources[details.key], FabricatePricingFunction(details, sources[details.key]), prestige));\r\n                  }}\r\n                />\r\n              </Grid>\r\n            )\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      )}\r\n    </Grid>\r\n  )\r\n}","import {Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIncomeSources, getResearched, getResources} from \"../Redux/selectors\";\r\nimport {ResearchObjects} from \"../GameData/ResearchObjects\";\r\nimport CheckResearchUnlockable from \"../Util/CheckResearchUnlockable\";\r\nimport Purchasable from \"./controls/purchasable/purchasable\";\r\nimport {buyUpgrade} from \"../Redux/actions\";\r\n\r\n\r\nexport default function ResearchPanel(){\r\n  const dispatch = useDispatch();\r\n  const resources = useSelector(getResources)\r\n  const researched = useSelector(getResearched);\r\n  const sources = useSelector(getIncomeSources);\r\n  const prestige = useSelector(state => state.game.prestige)\r\n\r\n\r\n  const generateAltText = (multi) => {\r\n    if(multi >= 2){\r\n      return `${multi}x multiplier`\r\n    }else{\r\n      // multi must be between 1 - 2\r\n      multi -= 1;\r\n      multi *= 100;\r\n      return `${multi.toFixed(0)}% increase`\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {ResearchObjects.map(item => {\r\n        if(CheckResearchUnlockable(item.id, researched, sources)){\r\n          return(\r\n            <Grid item xs={12} key={`research_option_${item.id}`}>\r\n              <Purchasable\r\n                title={item.title}\r\n                subtitle={item.subtitle}\r\n                price={item.basePrice}\r\n                disabled={resources < item.basePrice}\r\n                altText={generateAltText(item.multiplier)}\r\n                onPurchase={() => {\r\n                  dispatch(buyUpgrade(item.id, item.basePrice, prestige));\r\n                }}\r\n              />\r\n            </Grid>\r\n          )\r\n        }else{\r\n          return null;\r\n        }\r\n      })}\r\n    </Grid>\r\n    )\r\n}","import {ResearchObjects} from \"../GameData/ResearchObjects\";\r\n\r\nexport default function checkResearchUnlockable(id, purchasedUpgrades, incomeSources) {\r\n  // if we already researched it return false\r\n  if(purchasedUpgrades.some(x => x === id)) return false;\r\n\r\n  // return false if there are any dependencies that we have not purchased yet\r\n  const item = ResearchObjects.find(x => x.id === id);\r\n  for (const dependency of item.dependencies) {\r\n    if(!purchasedUpgrades.some(x => x === dependency)) return false;\r\n  }\r\n\r\n  // return false if we dont own any of the fabType the upgrade is for\r\n  if(incomeSources[item.fabType] <= 0) return false\r\n\r\n  return true;\r\n}","import { useSelector, shallowEqual } from 'react-redux'\r\n\r\nexport function useShallowEqualSelector(selector) {\r\n  return useSelector(selector, shallowEqual)\r\n}","import classes from \"./communications.module.css\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {listenCommunications} from \"../../Redux/selectors\";\r\nimport Typist from 'react-typist';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {receiveMessage} from \"../../Redux/actions\";\r\n\r\n\r\nexport default function CommunicationsPanel(){\r\n  const dispatch = useDispatch();\r\n  const messages = useShallowEqualSelector(listenCommunications);\r\n\r\n  const formatMsg = (msg) => {\r\n    if(msg.startsWith('!')){\r\n      return msg.substring(1);\r\n    }\r\n    return msg;\r\n  }\r\n\r\n  const isImportant = (msg) => {\r\n    return msg.startsWith('!');\r\n  }\r\n\r\n  return(\r\n    <div className={classes.wrapper}>\r\n      <Grid container direction={'column'} spacing={2}>\r\n        {messages.map(msg => (\r\n          <Grid item xs={12} key={msg.index}>\r\n            {\r\n              msg.received ?\r\n                <span className={[classes.message, isImportant(msg.message) && classes.priorityMessage].join(\" \")}\r\n                      dangerouslySetInnerHTML={{__html: formatMsg(msg.message)}} />\r\n                :\r\n                <Typist\r\n                  startDelay={1}\r\n                  onTypingDone={() => dispatch(receiveMessage(msg.index))}\r\n                  cursor={{\r\n                    show: true,\r\n                    blink: true,\r\n                    element: '|',\r\n                    hideWhenDone: true,\r\n                    hideWhenDoneDelay: 250,\r\n                  }}\r\n                >\r\n                  <span className={[classes.message, isImportant(msg.message) && classes.priorityMessage].join(\" \")}>\r\n                    {formatMsg(msg.message)}</span>\r\n                </Typist>\r\n            }\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from \"./modal.module.css\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  actions: PropTypes.array,\r\n};\r\n\r\nfunction Modal({open, actions, children}) {\r\n  if(!open) return null;\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.backdrop}>\r\n      <div className={classes.wrapper}>\r\n        {children}\r\n        <Grid container spacing={2} className={classes.actions}>\r\n          {\r\n            actions && actions.length > 0 &&\r\n            actions.map((action, index) => (\r\n              <Grid item key={`${action.label}_button`}>\r\n                <Button\r\n                  onClick={action.onClick}\r\n                  variant={'outlined'}\r\n                  color={action.color}\r\n                  disabled={action.disabled}\r\n                >{action.label}</Button>\r\n              </Grid>\r\n            ))\r\n          }\r\n        </Grid>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\r\nimport {Button, Divider, Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classes from \"./launchPanel.module.css\";\r\nimport Modal from \"../modal/modal\";\r\nimport {prestige} from \"../../../Redux/actions\";\r\nimport useKeepPercent from \"../../../Hooks/useKeepPercent\";\r\n\r\nfunction LaunchPanel() {\r\n  const dispatch = useDispatch();\r\n  const launchFacilityCount = useSelector((state) => state.sources.launchFacility)\r\n  const currentPrestige = useSelector(state => state.game.prestige);\r\n  const keepPercent = useKeepPercent();\r\n\r\n  const [launchConfirmation, setLaunchConfirmation] = useState(false);\r\n  const launchConfirmActions = [\r\n    {\r\n      label: 'cancel',\r\n      color: 'secondary',\r\n      onClick: () => setLaunchConfirmation(false)\r\n    },\r\n    {\r\n      label: \"yes I'm ready\",\r\n      onClick: () => {\r\n        dispatch(prestige(currentPrestige, keepPercent));\r\n        setLaunchConfirmation(false);\r\n      }\r\n    }\r\n  ]\r\n\r\n  const roundToAppropriate = num => {\r\n    if (num > 1) {\r\n      return num.toFixed(3);\r\n    } else if (num > 0.0999) {\r\n      return num.toFixed(3);\r\n    } else if (num > 0.0099) {\r\n      return num.toFixed(4);\r\n    } else {\r\n      return num.toFixed(5);\r\n    }\r\n  }\r\n\r\n  if (launchFacilityCount === 0) return null;\r\n  return (\r\n    <div>\r\n      <Grid item xs={12} style={{display: \"flex\", flexDirection: 'column', alignItems: 'center'}}>\r\n        <h2 className={classes.launchText}>RETURN TO {currentPrestige === 0 ? \"EARTH\" : \"MARS\"}</h2>\r\n        <span className={classes.subtext}>You will keep {roundToAppropriate(keepPercent * 100)}% of resources</span>\r\n        <Button\r\n          fullWidth\r\n          variant={'outlined'}\r\n          color={'secondary'}\r\n          onClick={() => setLaunchConfirmation(true)}\r\n        >Launch</Button>\r\n      </Grid>\r\n      <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n      <Modal\r\n        open={launchConfirmation}\r\n        actions={launchConfirmActions}\r\n      >\r\n        <div>\r\n          <h1>\r\n            Are you sure you are ready to launch?\r\n          </h1>\r\n          <p>\r\n            Building more <span style={{color: 'var(--color-primary)'}}>Orbital Launch Platforms</span> and\r\n            <span style={{color: 'var(--color-primary)'}}>Space Elevators</span> will increase the amount of resources\r\n            you will\r\n            get to bring with you. Only leave when you are sure you are ready.\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LaunchPanel;","import {useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nexport default function useKeepPercent() {\r\n  const [factor, setFactor] = useState(0);\r\n  const elevatorCount = useSelector((state) => state.sources.spaceElevator)\r\n  const launchFacilityCount = useSelector((state) => state.sources.launchFacility)\r\n\r\n  const eq = (count) => {\r\n    return -1 / (1 + count / 200) + 1\r\n  }\r\n\r\n  const launchFactor = 0.35;\r\n  const elevatorFactor = 0.65;\r\n  // return eq(launchFacilityCount) * launchFactor + eq(elevatorCount) * elevatorFactor;\r\n\r\n\r\n  useEffect(() => {\r\n    setFactor(eq(launchFacilityCount) * launchFactor + eq(elevatorCount) * elevatorFactor)\r\n  }, [elevatorCount, launchFacilityCount])\r\n\r\n  return factor;\r\n}\r\n","import {Button, ButtonGroup, Divider, Grid} from \"@material-ui/core\";\r\nimport classes from \"./main.module.css\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ResourceDisplay from \"../../Components/resourceDisplay/resourceDisplay\";\r\nimport PlanetDisplay from \"../../Components/planetDisplay/planetDisplay\";\r\nimport {useState} from \"react\";\r\nimport FabricatePanel from \"../../Components/fabricatePanel\";\r\nimport {increaseResources} from \"../../Redux/actions\";\r\nimport ResearchPanel from \"../../Components/researchPanel\";\r\nimport CommunicationsPanel from \"../../Components/communications/communicationsPanel\";\r\nimport LaunchPanel from \"../../Components/controls/LaunchButton/launchPanel\";\r\n\r\n\r\nexport default function Main(){\r\n  const dispatch = useDispatch();\r\n\r\n  const [openTab, setOpenTab] = useState('fabricate');\r\n\r\n\r\n  return(\r\n    <Grid container spacing={2} style={{height: '100vh'}} alignItems={'stretch'} justify={'center'}>\r\n      <Grid item xs={12} sm={6} md={4} className={classes.sidePanel} style={{overflow: 'hidden', display: \"flex\", flexDirection: 'column'}}>\r\n          <ResourceDisplay/>\r\n          <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n          <PlanetDisplay/>\r\n          <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n          <Button\r\n            variant={'outlined'}\r\n            fullWidth\r\n            onClick={() => dispatch(increaseResources(1))}\r\n          >Mine resources</Button>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <LaunchPanel/>\r\n        <div className={classes.comsWrapper}>\r\n          <CommunicationsPanel/>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} className={classes.sidePanel}>\r\n        <ButtonGroup fullWidth>\r\n          <Button\r\n            variant={openTab === 'fabricate' ? \"contained\" : \"outlined\"}\r\n            onClick={() => setOpenTab('fabricate')}\r\n          >Fabricate</Button>\r\n          <Button\r\n            variant={openTab === 'research' ? \"contained\" : \"outlined\"}\r\n            onClick={() => setOpenTab('research')}\r\n          >Research</Button>\r\n        </ButtonGroup>\r\n        {openTab === 'fabricate' ? <FabricatePanel /> : <ResearchPanel />}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import { useEffect, useRef } from 'react'\r\n\r\nfunction useInterval(callback, delay=null) {\r\n  const savedCallback = useRef(callback)\r\n  const last = useRef(performance.now());\r\n  const init = useRef(performance.now());\r\n\r\n  // Remember the latest callback if it changes.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    // Don't schedule if no delay is specified.\r\n    if (delay === null) {\r\n      return\r\n    }\r\n\r\n    const id = setInterval(() => {\r\n      const now = performance.now();\r\n      const time = (now - init.current) / 1000;\r\n      const delta = (now - last.current) / 1000;\r\n\r\n      savedCallback.current({time, delta})\r\n      last.current = now;\r\n    }, delay)\r\n\r\n    return () => clearInterval(id)\r\n  }, [delay])\r\n}\r\n\r\nexport default useInterval","import React, {useState} from 'react';\r\nimport Modal from \"../../controls/modal/modal\";\r\nimport Typist from 'react-typist';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {closeStory} from \"../../../Redux/actions\";\r\nimport classes from \"./meetColony.module.css\";\r\n\r\nfunction MeetColonyDialogPopup({open}) {\r\n  const dispatch = useDispatch();\r\n  const show = useSelector(state => state.game.storyShow.meetColony)\r\n  const [doneTyping, setDoneTyping] = useState(false);\r\n\r\n\r\n  if(!show) return null;\r\n  return (\r\n    <Modal open actions={[{\r\n      label: \"Give Resources\",\r\n      // disabled: !doneTyping,\r\n      onClick: () => dispatch(closeStory('meetColony'))\r\n    }]}>\r\n      <div className={classes.typistWrapper}>\r\n        <Typist\r\n          startDelay={1}\r\n          onTypingDone={() => setDoneTyping(true)}\r\n          cursor={{\r\n            show: true,\r\n            blink: true,\r\n            element: '|',\r\n            hideWhenDone: true,\r\n            hideWhenDoneDelay: 250,\r\n          }}\r\n        >\r\n          <span style={{fontSize: '1.5em'}}>Incoming transmission...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>Mayday Mayday SOS...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>The earth has been destroyed!</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>We thought we were the only humans left in the universe</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>3 years ago the world fell into a civil war that ended up destroying Earth and most of Mars.\r\n            We are only 8 people surviving deep under the martian surface. We hae no resources to rebuild and our space port was destroyed.\r\n            Without help we won't survive longer than a couple more miserable years.</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={1000}/>\r\n          <span>Please...</span>\r\n          <br/><br/>\r\n          <Typist.Delay ms={2000}/>\r\n          <span>Help us...</span>\r\n          <br/><br/>\r\n\r\n        </Typist>\r\n        <br/>\r\n\r\n      </div>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MeetColonyDialogPopup;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getColonyResources, getColonyResourcesPerSecond, getIncomePerSecond} from \"../Redux/selectors\";\r\nimport {INCREASE_RESOURCES, RESET} from \"../Redux/actionTypes\";\r\nimport useInterval from \"../Hooks/useInterval\";\r\nimport usePaused from \"../Hooks/usePaused\";\r\nimport MeetColonyDialogPopup from \"./story/firstPrestige/meetColonyDialogPopup\";\r\nimport {\r\n  addColonist,\r\n  addMessage,\r\n  assignColonist,\r\n  decreaseColonyResources,\r\n  increaseColonyResources\r\n} from \"../Redux/actions\";\r\nimport {useShallowEqualSelector} from \"../Hooks/useShallowEqualSelector\";\r\nimport {useState} from \"react\";\r\n\r\n/**\r\n * Controls the timing of the game, ticks once every 25th of a second\r\n */\r\nexport default function GameManager() {\r\n  const dispatch = useDispatch();\r\n  const incomePerSecond = useSelector(getIncomePerSecond);\r\n  const colonyIncomes = useShallowEqualSelector(getColonyResourcesPerSecond);\r\n  const population = useSelector(state => state.colony.population);\r\n  const colonyResources = useShallowEqualSelector(getColonyResources);\r\n  const building = useShallowEqualSelector(state => state.colony.buildings);\r\n  const paused = usePaused();\r\n  const currentPrestige = useSelector(state => state.game.prestige);\r\n\r\n  const [goneHungry, setGoneHungry] = useState(0);\r\n\r\n\r\n  // Game global tick rate\r\n  useInterval(({time, delta}) => {\r\n    if (!paused) {\r\n      dispatch({type: INCREASE_RESOURCES, payload: incomePerSecond * delta});\r\n      let payload = Object.entries(colonyIncomes).reduce((a, [key, value]) => {\r\n        a[key] = value * delta;\r\n        return a;\r\n      }, {});\r\n      dispatch(increaseColonyResources(payload))\r\n\r\n      // check if we need to convert population resource to population\r\n      if(colonyResources?.population >=1){\r\n        dispatch(decreaseColonyResources({population: 1}));\r\n        dispatch(addColonist(1));\r\n      }\r\n    }\r\n  }, 40)\r\n\r\n  // colony upkeep and events\r\n  useInterval(({time, delta}) => {\r\n    if (!paused && currentPrestige > 0) {\r\n      console.log(\"COLONY UPKEEP\");\r\n      let foodRequired = population * (delta / 60);\r\n      let wellFed = false;\r\n      if (((colonyResources.food ?? 0) + (colonyResources.biomass ?? 0)) > foodRequired * 4) {\r\n        foodRequired *= 2;\r\n        wellFed = true;\r\n      }\r\n      const takenFromFood = Math.min(foodRequired, colonyResources.food ?? 0);\r\n      const takenFromBiomass = foodRequired - takenFromFood;\r\n      const hungry = takenFromBiomass > (colonyResources.biomass ?? 0);\r\n\r\n      dispatch(decreaseColonyResources({\r\n        biomass: takenFromBiomass,\r\n        food: takenFromFood / 2,  // food is more nutritious than biomass so it takes half as much food to feed ppl\r\n      }));\r\n\r\n      let event = false;\r\n\r\n      //events\r\n      if (hungry) {\r\n        if (goneHungry >= 3) {\r\n          dispatch(addMessage(\"A colonist has starved to death.\", 3));\r\n          dispatch(assignColonist(-1));\r\n        } else if (goneHungry === 2) {\r\n          dispatch(addMessage(\"We are starving, if we don't get food soon we will surely die.\", 3))\r\n        } else if (goneHungry === 1) {\r\n          dispatch(addMessage(\"People are rationing and going without food, it's getting pretty bad down here.\", 3))\r\n        } else {\r\n          dispatch(addMessage(\"We are running dangerously low on food, if we dont get more soon we will need to start rationing...\", 3))\r\n        }\r\n        setGoneHungry(prev => prev + 1);\r\n        event = true;\r\n      } else if (wellFed && (Math.random() > 0.92)) {\r\n        // new colonist\r\n        dispatch(addMessage(\"A new colonist has been born!\", 3))\r\n        dispatch(addColonist(1));\r\n      }\r\n\r\n      // trigger a sickness or accident\r\n      if (building?.medic && !event && (Math.random() > 0.95)) {\r\n        event = true;\r\n        const severity = Math.ceil(Math.random() * 4);\r\n        let message = \"\";\r\n        switch (severity) {\r\n          case 1: {\r\n            message = \"A colonist has come down with a bad fever... \";\r\n            break;\r\n          }\r\n          case 2: {\r\n            message = \"Two colonists got into a fight and have injured one another... \";\r\n            break;\r\n          }\r\n          case 3:{\r\n            message = \"While working on the air recyclers a colonist got their arm stuck in the machine and emergency vented the room the others were working in... \";\r\n            break;\r\n          }\r\n          case 4:{\r\n            message = \"A disease has spread through some of the colonists... \";\r\n            break;\r\n          }\r\n          default:{\r\n            message = \"A got sick... \";\r\n            break;\r\n          }\r\n        }\r\n        if(colonyResources?.meds >= severity){\r\n          message += \"With proper medical treatment and some bed rest they ended up alright.\";\r\n        }else{\r\n          message += \"Unfortunately we did not have enough medicine to save them.\";\r\n          dispatch(addColonist(-severity));  // kill some colonists\r\n        }\r\n        dispatch(addMessage(message, 3))\r\n      }\r\n\r\n      // increase colony size\r\n      if(!event && (Math.random() > 0.95)){\r\n        event = true;\r\n        const number = Math.ceil(Math.random() * population * 0.10);\r\n        dispatch(addMessage(`We found another small pocket of survivors who have agreed to join us! ${number} ${number === 1 ? 'person has' : 'people have'} joined the colony.`, 3))\r\n        dispatch(addColonist(number));\r\n      }\r\n\r\n      // random resource\r\n      if(!event && (Math.random() > 0.95)){\r\n        const keys = Object.keys(colonyResources);\r\n        const chosen = keys[Math.floor(Math.random()*keys.length)];\r\n        const amount = Math.ceil(Math.random() * population)\r\n        dispatch(increaseColonyResources({[chosen]: amount}));\r\n        dispatch(addMessage(`One of our people was exploring the ruins and found ${amount} ${chosen}!`, 3))\r\n      }\r\n\r\n    }\r\n  }, 60000)\r\n\r\n\r\n  // define some global functions for the console;\r\n  window.resetGame = () => {\r\n    dispatch({type: RESET})\r\n  }\r\n  window.addResources = (amount) => {\r\n    dispatch({type: INCREASE_RESOURCES, payload: amount})\r\n  }\r\n  window.addMessage = (msg) => {\r\n    dispatch(addMessage(msg, 3))\r\n  }\r\n  return (\r\n    <>\r\n      <MeetColonyDialogPopup/>\r\n    </>\r\n  )\r\n}","import {useSelector} from \"react-redux\";\r\n\r\nexport default function usePaused(){\r\n  let paused = useSelector(state => state.game.paused);\r\n  return paused;\r\n}","import React from 'react';\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\n\r\nfunction ColonyOverview() {\r\n  const resources = useShallowEqualSelector(state => state.resources.colonyResources);\r\n\r\n  return (\r\n    <div style={{paddingTop: '20px', display: \"flex\", justifyContent: 'space-between', alignItems: 'baseline'}}>\r\n      <h1 style={{margin: 0}}>Mars Colony</h1>\r\n      <h3 style={{margin: 0, opacity: 0.5}}>{resources} - Orbital Resources</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyOverview;","import React from 'react';\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {getColonyResources} from \"../../Redux/selectors\";\r\n\r\nfunction ColonyResources() {\r\n  let resources = useShallowEqualSelector(getColonyResources);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <table style={{width: '100%', textAlign: 'left'}}>\r\n        <thead>\r\n        <tr><th>Resource</th><th>amount</th></tr>\r\n        </thead>\r\n        <tbody>\r\n        {Object.entries(resources).map(([key, value]) => {\r\n          if(key === 'population') return null;\r\n          return(\r\n            <tr key={`colony_resources_${key}`}><td>{key}</td><td>{value}</td></tr>\r\n          )\r\n        })}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyResources;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {colonyObjects} from \"../../GameData/colonyObjects\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Purchasable from \"../controls/purchasable/purchasable\";\r\nimport FabricatePricingFunction from \"../../Util/FabricatePricingFunction\";\r\nimport {addBuilding} from \"../../Redux/actions\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\n\r\nfunction ColonyBuildingsPanel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const buildings = useShallowEqualSelector(state => state.colony.buildings);\r\n  const resources = useSelector(state => state.resources.colonyResources)\r\n\r\n  const mapObject = Object.entries(colonyObjects)\r\n    .map(([key, value]) => ({...value, key}));\r\n  return (\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {mapObject.map((details, index) => {\r\n          if (index === 0 || buildings[mapObject[index - 1].key] > 0) {\r\n            return (\r\n              <Grid item xs={12} key={`buildings_option_${details.key}`}>\r\n                <Purchasable\r\n                  title={details.title}\r\n                  subtitle={details.subtitle}\r\n                  altText={`${details.workers} workers /building`}\r\n                  owned={buildings[details.key]}\r\n                  price={FabricatePricingFunction(details, buildings[details.key] ?? 0)}\r\n                  disabled={resources < FabricatePricingFunction(details, buildings[details.key] ?? 0)}\r\n                  onPurchase={() => {\r\n                    dispatch(addBuilding(details.key, buildings[details.key], FabricatePricingFunction(details, buildings[details.key] ?? 0)));\r\n                  }}\r\n                />\r\n              </Grid>\r\n            )\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ColonyBuildingsPanel;","import React from 'react';\r\nimport classes from \"./assignments.module.css\";\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {assignColonist, unAssignColonist} from \"../../../Redux/actions\";\r\n\r\nAssignmentControl.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  assigned: PropTypes.number,\r\n  subtitle: PropTypes.string\r\n};\r\n\r\nfunction AssignmentControl({name, assigned, subtitle}) {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <div className={classes.controlWrapper}>\r\n      <Grid container>\r\n        <Grid item xs={8} className={classes.titles}>\r\n          <h2>{name}</h2>\r\n          <p>{subtitle}</p>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.controls}>\r\n          <div className={classes.assignedCount}>\r\n            <h1>{assigned ?? 0}</h1>\r\n          </div>\r\n          <div className={classes.up}>\r\n            <IconButton size={'small'} onClick={() => dispatch(assignColonist(name))}>\r\n              <KeyboardArrowUpIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.down}>\r\n            <IconButton size={'small'} onClick={() => dispatch(unAssignColonist(name))}>\r\n              <KeyboardArrowDownIcon/>\r\n            </IconButton>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentControl;\r\n\r\n\r\n","import React from 'react';\r\nimport classes from \"./assignments.module.css\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addColonist, increaseColonyResources} from \"../../../Redux/actions\";\r\n\r\nfunction Sacrifice() {\r\n  const dispatch = useDispatch();\r\n  const population = useSelector(state => state.colony.population);\r\n\r\n  const sacrifice = () => {\r\n    dispatch(addColonist(-1));\r\n    dispatch(increaseColonyResources({blood: 1}));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.controlWrapper}>\r\n      <Grid container>\r\n        <Grid item xs={8} className={classes.titles}>\r\n          <h2>Sacrifice Colonist</h2>\r\n          <p style={{fontStyle: 'italic', color: '#d01c1c', fontFamily: \"Cabin Sketch\"}}>A God demands blood</p>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Button\r\n            color={'secondary'}\r\n            onClick={sacrifice}\r\n            disabled={population <= 2}\r\n            fullWidth\r\n            variant={'outlined'}\r\n          >\r\n            Sacrifice\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sacrifice;\r\n\r\n\r\n","import React from 'react';\r\nimport {useShallowEqualSelector} from \"../../../Hooks/useShallowEqualSelector\";\r\nimport AssignmentControl from \"./assignmentControl\";\r\nimport {colonyObjects} from \"../../../GameData/colonyObjects\";\r\nimport Sacrifice from \"./sacrifice\";\r\n\r\nfunction ColonyAssignmentsPanel() {\r\n  const assignments = useShallowEqualSelector(state => state.colony.assignments);\r\n  const buildings = useShallowEqualSelector(state => state.colony.buildings);\r\n\r\n\r\n  const generateSubtitle = (details, count) => {\r\n    let s = [];\r\n    for (const input of details.inputs) {\r\n      s.push(`-${input.numerator * count} ${input.name} /${input.denominator}s`)\r\n    }\r\n    for (const output of details.outputs) {\r\n      s.push(`+${output.numerator * count} ${output.name} /${output.denominator}s`)\r\n    }\r\n    return s.join(\", \")\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(assignments).map(([key, value]) => {\r\n        const details = colonyObjects[key];\r\n        if(!details) return null;\r\n        if(key === 'sacrifice') return null;\r\n        return(\r\n          <AssignmentControl key={`assignments_${key}`} name={key} assigned={value} subtitle={generateSubtitle(details, value)}/>\r\n        )\r\n      })}\r\n      {\r\n        buildings.sacrifice &&\r\n        <Sacrifice/>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyAssignmentsPanel;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport {getColonistAssignments} from \"../../Redux/selectors\";\r\n\r\nfunction ColonyAssignmentsHeader(props) {\r\n  const population = useSelector(state => state.colony.population);\r\n  const assignments = useShallowEqualSelector(getColonistAssignments);\r\n\r\n  const totalAssigned = () => {\r\n    return Object.values(assignments).reduce((a, r) => a += r, 0)\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{paddingTop: '20px', display: \"flex\", justifyContent: 'space-between', alignItems: 'baseline'}}>\r\n      <h1 style={{margin: 0}}>Assignments</h1>\r\n      <h3 style={{marginTop: 0, marginBottom: 0, opacity: 0.5}}>{population} ({population - totalAssigned()}) - Population</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColonyAssignmentsHeader;","export const colonyUpgrades = {\r\n  'mining 1': {\r\n    title: \"Improved Mining I\",\r\n    subtitle: \"We can improve your ship with a few scraps, technology advanced quite a bit since the last time that things has seen the arc of a welder\",\r\n    dependencies: [],\r\n    building: '',\r\n    price: {\r\n      steel: 10,\r\n      tech: 10\r\n    },\r\n  },\r\n  'mining 2': {\r\n    title: \"Improved Mining II\",\r\n    subtitle: \"We have improved our machining capabilities and can now make proper upgrades to your ship.\",\r\n    dependencies: ['mining 1'],\r\n    building: '',\r\n    price: {\r\n      steel: 2000,\r\n      tech: 2000\r\n    },\r\n  },\r\n  'mining 3': {\r\n    title: \"Improved Mining III\",\r\n    subtitle: \"Improvements come easy now, we have invented a new pulsar laser that might be able to improve mining speeds by 3 times.\",\r\n    dependencies: ['mining 2'],\r\n    building: '',\r\n    price: {\r\n      steel: 10000,\r\n      tech: 10000\r\n    },\r\n  },\r\n  'mining 4': {\r\n    title: \"Improved Mining IV\",\r\n    subtitle: \"Divine power has been gifted to our machines, they are more powerful than we could ever be.\",\r\n    dependencies: ['mining 3'],\r\n    building: '',\r\n    price: {\r\n      steel: 50000,\r\n      tech: 50000,\r\n      blood: 20,\r\n    },\r\n  },\r\n  'mining 5': {\r\n    title: \"Improved Mining V\",\r\n    subtitle: \"We are the chosen among the gods, blessed be our holy mission.\",\r\n    dependencies: ['mining 4'],\r\n    building: '',\r\n    price: {\r\n      steel: 1000000,\r\n      tech: 1000000,\r\n      favour: 200,\r\n    },\r\n  },\r\n  'biomass efficiency 1': {\r\n    title: \"Fortified Biomass\",\r\n    subtitle: \"Chemically altering the biomass slurry means we can produce it at twice the rate. It still doesnt make it taste good though.\",\r\n    dependencies: [],\r\n    building: '',\r\n    price: {\r\n      biomass: 20,\r\n      tech: 40\r\n    },\r\n  },\r\n  'biomass efficiency 2': {\r\n    title: \"Improved Water Recyclers\",\r\n    subtitle: \"We have improved the efficiency of the water recyclers and the benefits look promising.\",\r\n    dependencies: ['biomass efficiency 1'],\r\n    building: '',\r\n    price: {\r\n      biomass: 200,\r\n      tech: 250\r\n    },\r\n  },\r\n  'lost manuals': {\r\n    title: \"Forgotten Library\",\r\n    subtitle: \"We found manuscripts details how the lost technology works, our engineers will be able to make good use of this.\",\r\n    dependencies: [],\r\n    building: 'engineer',\r\n    price: {\r\n      steel: 1337,\r\n      tech: 1337\r\n    },\r\n  },\r\n  'robotics': {\r\n    title: \"Robotics\",\r\n    subtitle: \"We can enhance our advanced manufacturing research by using some reclaimed robotcs.\",\r\n    dependencies: ['lost manuals'],\r\n    building: 'engineer',\r\n    price: {\r\n      steel: 5000,\r\n      tech: 5500,\r\n    },\r\n  },\r\n  'night vision goggles': {\r\n    title: \"Night Vision Goggles\",\r\n    subtitle: \"We found a stash of night vision goggles, with a bit of repair we could give these to the scouts to help them look for loot at night.\",\r\n    dependencies: [],\r\n    building: 'scout',\r\n    price: {\r\n      steel: 500,\r\n      tech: 1000\r\n    },\r\n  },\r\n  'antibiotics': {\r\n    title: \"Antibiotics\",\r\n    subtitle: \"Improved antibiotics means it takes half as many resources to keep people healthy.\",\r\n    dependencies: [],\r\n    building: 'medic',\r\n    price: {\r\n      food: 7500,\r\n      tech: 7500\r\n    },\r\n  },\r\n  'prayer beads': {\r\n    title: \"Prayer Beads\",\r\n    subtitle: \"A holy relic that promises to bring the wearer closer to those who made him.\",\r\n    dependencies: [],\r\n    building: 'medic',\r\n    price: {\r\n      steel: 30000,\r\n      tech: 30000\r\n    },\r\n  },\r\n  'genetics': {\r\n    title: \"Genome Sequencing\",\r\n    subtitle: \"We can now birth healthier and stronger colonists at a faster rate.\",\r\n    dependencies: [],\r\n    building: 'breeder',\r\n    price: {\r\n      steel: 100000,\r\n      tech: 100000\r\n    },\r\n  },\r\n  'hell': {\r\n    title: \"The Ultimate Sacrifice\",\r\n    subtitle: \"Sacrifice all to the Old Ones\",\r\n    dependencies: ['genetics', 'prayer beads', 'antibiotics', 'night vision goggles'],\r\n    building: 'sacrifice',\r\n    price: {\r\n      blood: 666666666,\r\n      favour: 666666666,\r\n    },\r\n  },\r\n}","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Purchasable from \"../../controls/purchasable/purchasable\";\r\nimport {colonyUpgrades} from \"../../../GameData/colonyUpgrades\";\r\nimport {useShallowEqualSelector} from \"../../../Hooks/useShallowEqualSelector\";\r\nimport {getColonyResources} from \"../../../Redux/selectors\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {decreaseColonyResources, ResearchColony} from \"../../../Redux/actions\";\r\n\r\nexport default function EngineeringPanel() {\r\n  const dispatch = useDispatch();\r\n  const colonyResources = useShallowEqualSelector(getColonyResources);\r\n  const colonyResearch = useShallowEqualSelector(state => state.colony.research);\r\n  const colonyBuildings = useShallowEqualSelector(state => state.colony.buildings);\r\n\r\n\r\n  const checkResources = (price) => {\r\n    for (const [key, value] of Object.entries(price)) {\r\n      if (!colonyResources[key] || colonyResources[key] < value) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const purchase = (details) => {\r\n    dispatch(ResearchColony(details.key));\r\n    dispatch(decreaseColonyResources(details.price));\r\n  }\r\n\r\n  const mapObject = Object.entries(colonyUpgrades)\r\n    .map(([key, value]) => ({...value, key}))\r\n    .filter(x => !colonyResearch.some(y => y === x.key))\r\n  return (\r\n    <Grid container spacing={1} style={{marginTop: '10px'}}>\r\n      {mapObject.map((details, index) => {\r\n          if(colonyBuildings[details.building] < 1) return null;\r\n          for (const dependency of details.dependencies) {\r\n            if(!colonyResearch.includes(dependency)) return null;\r\n          }\r\n\r\n          return (\r\n            <Grid item xs={12} key={`engineering_option_${details.key}`}>\r\n              <Purchasable\r\n                title={details.title}\r\n                subtitle={details.subtitle}\r\n                altText={Object.entries(details.price).map(([key, value]) => `${value} ${key}`).join(\", \")}\r\n                // owned={buildings[details.key]}\r\n                price={Object.entries(details.price).map(([key, value]) => `${value} ${key}`).join(\", \")}\r\n                disabled={!checkResources(details.price)}\r\n                onPurchase={() => purchase(details)}\r\n              />\r\n            </Grid>\r\n          )\r\n        }\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Button, ButtonGroup, Divider, Grid, Tooltip} from \"@material-ui/core\";\r\nimport CommunicationsPanel from \"../../Components/communications/communicationsPanel\";\r\nimport classes from \"./colony.module.css\";\r\nimport ColonyOverview from \"../../Components/colonyDisplays/colonyOverview\";\r\nimport ColonyResources from \"../../Components/colonyDisplays/colonyResources\";\r\nimport ColonyBuildingsPanel from \"../../Components/colonyDisplays/colonyBuildingsPanel\";\r\nimport ColonyAssignmentsPanel from \"../../Components/colonyDisplays/assignments/colonyAssignmentsPanel\";\r\nimport {useShallowEqualSelector} from \"../../Hooks/useShallowEqualSelector\";\r\nimport ColonyAssignmentsHeader from \"../../Components/colonyDisplays/colonyAssignmentsHeader\";\r\nimport EngineeringPanel from \"../../Components/colonyDisplays/engineering/engineeringPanel\";\r\n\r\nfunction Colony() {\r\n  const [openTab, setOpenTab] = useState('building');\r\n  const colonyBuildings = useShallowEqualSelector(state => state.colony.buildings);\r\n\r\n\r\n  return (\r\n    <Grid container spacing={2} className={classes.wrapper}>\r\n      <Grid item xs={12} sm={4} className={classes.sidePanel}>\r\n        <ColonyOverview/>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <ColonyResources/>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <div className={classes.comsWrapper}>\r\n          <CommunicationsPanel/>\r\n        </div>\r\n      </Grid>\r\n      <Grid item sm={4} xs={12}>\r\n        <ColonyAssignmentsHeader/>\r\n        <Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>\r\n        <ColonyAssignmentsPanel/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        {/*<h1 style={{margin: 0}}>Buildings</h1>*/}\r\n        {/*<Divider style={{backgroundColor: '#dbdbdb', margin: '10px 0'}}/>*/}\r\n        <ButtonGroup fullWidth>\r\n          <Button\r\n            variant={openTab === 'building' ? \"contained\" : \"outlined\"}\r\n            onClick={() => setOpenTab('building')}\r\n          >Building</Button>\r\n          <Tooltip\r\n            title={\"Unlocked after constructing 'Engineers Workshop'\"}\r\n            arrow\r\n            placement={'top'}\r\n            disableHoverListener={Boolean(colonyBuildings?.engineer)}\r\n            disableTouchListener={Boolean(colonyBuildings?.engineer)}\r\n            disableFocusListener={Boolean(colonyBuildings?.engineer)}\r\n          >\r\n            <Button\r\n              variant={openTab === 'research' ? \"contained\" : \"outlined\"}\r\n              onClick={() => setOpenTab('research')}\r\n              disabled={!colonyBuildings?.engineer}\r\n            >Engineering</Button>\r\n          </Tooltip>\r\n        </ButtonGroup>\r\n        {\r\n          openTab === 'building' ?\r\n            <ColonyBuildingsPanel/>\r\n            :\r\n            <EngineeringPanel/>\r\n        }\r\n\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Colony;","import React from 'react';\r\nimport classes from \"./pageSwitcher.module.css\";\r\nimport {Button, ButtonGroup} from \"@material-ui/core\";\r\nimport {useLocation, useHistory} from \"react-router-dom\";\r\n\r\nfunction PageSwitcher(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <ButtonGroup fullWidth>\r\n        <Button\r\n          variant={location.pathname === \"/\" ? \"contained\" :\"outlined\"}\r\n          onClick={() => history.push('/')}\r\n        >System</Button>\r\n        <Button\r\n          variant={location.pathname === \"/colony\" ? \"contained\" :\"outlined\"}\r\n          onClick={() => history.push('/colony')}\r\n        >Colony</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageSwitcher;","import './App.css';\nimport Main from \"./Pages/main/main\";\nimport GameManager from \"./Components/gameManager\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\n\nimport Colony from \"./Pages/colony/Colony\";\nimport PageSwitcher from \"./Components/controls/pageSwitcher/pageSwitcher\";\nimport {useSelector} from \"react-redux\";\n\nfunction App() {\n  const prestige = useSelector(state => state.game.prestige);\n  const paused = useSelector(state => state.game.paused);\n\n  return (\n    <div style={{padding: '8px'}}>\n      <Router>\n        <GameManager/>\n        {\n          prestige > 0 &&\n          <PageSwitcher/>\n        }\n\n        <Switch>\n          {\n            prestige > 0 &&\n            <Route path={'/colony'}>\n              <Colony/>\n            </Route>\n          }\n\n          <Route>\n            <Main/>\n          </Route>\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  ADD_BUILDING,\r\n  ADD_INCOME_SOURCE,\r\n  BUY_UPGRADE,\r\n  DECREASE_RESOURCES,\r\n  INCREASE_RESOURCES,\r\n  PRESTIGE\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  current: 0,\r\n  colonyResources: 0\r\n};\r\n\r\nexport default function resources(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREASE_RESOURCES: {\r\n      return {\r\n        ...state,\r\n        current: state.current += action.payload\r\n      };\r\n    }\r\n    case DECREASE_RESOURCES: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload, 0)\r\n      };\r\n    }\r\n    case ADD_INCOME_SOURCE: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload.price, 0)\r\n      }\r\n    }\r\n    case BUY_UPGRADE: {\r\n      return {\r\n        ...state,\r\n        current: Math.max(state.current -= action.payload.price, 0)\r\n      }\r\n    }\r\n    case ADD_BUILDING:{\r\n      return {\r\n        ...state,\r\n        colonyResources: state.colonyResources - action.payload.price\r\n      }\r\n    }\r\n    case PRESTIGE: {\r\n      const keepPercent = action.payload.keepPercent;\r\n      const keepAmount = Math.ceil(state.current * keepPercent);\r\n      return {\r\n        ...state,\r\n        current: 0,\r\n        colonyResources: state.colonyResources + keepAmount\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_INCOME_SOURCE, PRESTIGE} from \"../actionTypes\";\r\nimport {fabObjects} from \"../../GameData/FabObjects\";\r\n\r\n\r\nconst initialState = Object.keys(fabObjects).reduce((a, r) => {\r\n  a[r] = 0;\r\n  return a;\r\n}, {})\r\n\r\nexport default function sources(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ADD_INCOME_SOURCE: {\r\n      return {\r\n        ...state,\r\n        [action.payload.type]: state[action.payload.type] += 1\r\n      };\r\n    }\r\n    case PRESTIGE:{\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {BUY_UPGRADE, PRESTIGE} from \"../actionTypes\";\r\n\r\nconst initialState = []\r\n\r\nexport default function upgrades(state = initialState, action) {\r\n  switch (action.type) {\r\n    case BUY_UPGRADE: {\r\n      return [...new Set([...state, action.payload.id])];\r\n    }\r\n    case PRESTIGE:{\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_INCOME_SOURCE, ADD_MESSAGE, BUY_UPGRADE, CLEAR_MESSAGES, PRESTIGE, RECEIVE_MESSAGE} from \"../actionTypes\";\r\nimport {fabObjects} from \"../../GameData/FabObjects\";\r\nimport {ResearchObjects} from \"../../GameData/ResearchObjects\";\r\n\r\nconst initialState = [\r\n  {\r\n    message: \"Wakey wakey, logs indicate you've been asleep for 93 years. We have arrived at the destination, \" +\r\n      \" asteroid designation 'AX62'. <br/><br/> <strong>Trip Debrief:</strong> We are aproximatly 57,000AU from earth making light speed \" +\r\n      \"communication delay 329 days or just over 2 years round trip. During transit we encounted 33 micrometeorite collisions resulting \" +\r\n      \"in damage to our long range communication equipment. All other systems are above 95% active health. <br/><br/>\" +\r\n      \"I am <strong>IAN</strong> and will be your insanity avoidance AI for the remainder of your time in the Oort Cloud.\",\r\n    received: true,\r\n    delay: 1,\r\n    index: 0,\r\n  },\r\n];\r\n\r\nexport default function communications(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      return [...state, {...action.payload, received: false, index: state.length}];\r\n    }\r\n    case RECEIVE_MESSAGE:{\r\n      let copy = [...state];\r\n      let msg = copy.find(x => x.index === action.payload.index);\r\n      if(msg){\r\n        msg.received = true;\r\n      }\r\n      return copy;\r\n    }\r\n    case CLEAR_MESSAGES:{\r\n      return [];\r\n    }\r\n    case PRESTIGE:{\r\n      return [];\r\n    }\r\n    case ADD_INCOME_SOURCE: {\r\n      const {type, count, prestige} = action.payload;\r\n      if(prestige > 0) return state;\r\n      if(count === 0 && fabObjects[type].message){\r\n        return [...state, {message: fabObjects[type].message, delay:3, received: false, index: state.length}];\r\n      }else{\r\n        return state;\r\n      }\r\n    }\r\n    case BUY_UPGRADE:{\r\n      const {id, prestige} = action.payload;\r\n      if(prestige > 0) return state;\r\n\r\n      const research = ResearchObjects.find(x => x.id === id);\r\n      if(research?.message){\r\n        return [...state, {message: research.message, delay:3, received: false, index: state.length}];\r\n      }else{\r\n        return state;\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {CLOSE_STORY, PRESTIGE, TOGGLE_PAUSE} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  paused: false,\r\n  prestige: 0,\r\n  storyShow: {\r\n    meetColony: false,\r\n  }\r\n};\r\n\r\nexport default function game(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_PAUSE: {\r\n      return {\r\n        ...state,\r\n        paused: !state.paused\r\n      };\r\n    }\r\n    case PRESTIGE: {\r\n      let newState = {...state, prestige: state.prestige + 1}\r\n      if (newState.prestige === 1) {\r\n        // if it is the first prestige, trigger the story event to meet the colony\r\n        newState.storyShow.meetColony = true;\r\n        newState.paused = true;\r\n      }\r\n      return newState\r\n    }\r\n    case CLOSE_STORY: {\r\n      return {\r\n        ...state,\r\n        paused: false,\r\n        storyShow: {\r\n          ...state.storyShow,\r\n          [action.payload.type]: false\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_BUILDING, ADD_COLONIST,\r\n  ASSIGN_COLONIST, COLONY_RESEARCH,\r\n  DECREASE_COLONY_RESOURCE,\r\n  INCREASE_COLONY_RESOURCE,\r\n  UN_ASSIGN_COLONIST\r\n} from \"../actionTypes\";\r\nimport {colonyObjects} from \"../../GameData/colonyObjects\";\r\n\r\nconst initialState = {\r\n  population: 5,\r\n  buildings: {},\r\n  assignments: {},\r\n  resources: {},\r\n  research: []\r\n}\r\n\r\n\r\nexport default function colony(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_COLONIST:{\r\n      // check if negative - extra checks against assignments\r\n      if(action.payload.count < 0){\r\n        // check if the new colonist count < assigned colonists\r\n        const assigned = Object.values(state.assignments).reduce((a, r) => a + r, 0);\r\n        let diff = Math.abs(state.population + action.payload.count - assigned)\r\n        if(state.population + action.payload.count < assigned){\r\n          let assignmentsCopy = {...state.assignments};\r\n          for (const [key, value] of Object.entries(state.assignments)) {\r\n            if(value > 0){\r\n              const subAmount = Math.min(diff, value);\r\n              diff -= subAmount;\r\n              assignmentsCopy[key] = value - subAmount;\r\n            }\r\n          }\r\n          return{\r\n            ...state,\r\n            population: Math.max(state.population + action.payload.count, 1),\r\n            assignments: assignmentsCopy\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        population: Math.max(state.population + action.payload.count, 1)\r\n      }\r\n    }\r\n    case INCREASE_COLONY_RESOURCE: {\r\n      let resourcesCopy = {...state.resources};\r\n      for (const [key, value] of Object.entries(action.payload.increases)) {\r\n        resourcesCopy[key] = (state.resources[key] ?? 0) + value;\r\n      }\r\n      return {\r\n        ...state,\r\n        resources: resourcesCopy\r\n      };\r\n    }\r\n    case DECREASE_COLONY_RESOURCE: {\r\n      let resourcesCopy = {...state.resources};\r\n      for (const [key, value] of Object.entries(action.payload.decreases)) {\r\n        if(!resourcesCopy[key]) continue;\r\n        resourcesCopy[key] = Math.max((resourcesCopy[key] ?? 0) - value, 0);\r\n      }\r\n      // if(Object.keys(resourcesCopy).length === 0) return state;\r\n      return {\r\n        ...state,\r\n        resources: resourcesCopy\r\n      }\r\n    }\r\n    case ADD_BUILDING: {\r\n      const type = action.payload.type;\r\n      const details = colonyObjects[type];\r\n\r\n      //initialize new resources if there are any\r\n      let newResources = {};\r\n      for (const output of details.outputs) {\r\n        newResources[output.name] = state.resources[output.name] ?? 0\r\n      }\r\n      for (const input of details.inputs) {\r\n        newResources[input.name] = state.resources[input.name] ?? 0\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        buildings: {\r\n          ...state.buildings,\r\n          [type]: (state.buildings[type] ?? 0) + 1\r\n        },\r\n        resources: {\r\n          ...state.resources,\r\n          ...newResources\r\n        },\r\n        assignments: {\r\n          ...state.assignments,\r\n          [type]: state.assignments[type] ?? 0\r\n        }\r\n      }\r\n    }\r\n    case ASSIGN_COLONIST: {\r\n      const type = action.payload.type;\r\n      let assignmentCopy = {...state.assignments}\r\n      // check that we are not at out max assigned\r\n      const details = colonyObjects[action.payload.type]\r\n      const maxAssigned = details.workers * state.buildings[action.payload.type];\r\n      if(state.assignments[action.payload.type] >= maxAssigned) return state;\r\n      // figure out if we already have assigned all available colonists -> remove one at random\r\n      const totalAssigned = Object.values(state.assignments).reduce((a, r) => a + r, 0);\r\n      let diff = totalAssigned + 1 - state.population;\r\n      for (let i = 0; i < diff; i++) {\r\n        // find the first property with > 0 assigned colonists\r\n        for (const [key, value] of Object.entries(assignmentCopy)) {\r\n          if (value > 0 && key !== type){\r\n            assignmentCopy[key] -= 1;\r\n            diff -= 1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      assignmentCopy[type] = Math.min((assignmentCopy[type] ?? 0) + 1, maxAssigned, state.population);\r\n      return {\r\n        ...state,\r\n        assignments: assignmentCopy\r\n      }\r\n    }\r\n    case UN_ASSIGN_COLONIST: {\r\n      const type = action.payload.type;\r\n      let assignmentCopy = {...state.assignments}\r\n      assignmentCopy[type] = Math.max((assignmentCopy[type] ?? 0) - 1, 0);\r\n      return {\r\n        ...state,\r\n        assignments: assignmentCopy\r\n      }\r\n    }\r\n    case COLONY_RESEARCH:{\r\n      const key = action.payload.research;\r\n      return {\r\n        ...state,\r\n        research: [...new Set([...state.research, key])]\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport resources from \"./resources\";\r\nimport sources from \"./sources\";\r\nimport upgrades from \"./upgrades\";\r\nimport communications from \"./communications\";\r\nimport game from \"./game\";\r\nimport colony from \"./colony\";\r\nimport {RESET} from \"../actionTypes\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst appReducer = combineReducers({ resources, sources, upgrades, communications, game, colony});\r\n\r\nexport const rootReducer = (state, action) => {\r\n  if(action.type === RESET){\r\n    storage.removeItem('persist:root');\r\n    return appReducer(undefined, action);\r\n  }else{\r\n    return appReducer(state, action);\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nlet store = createStore(persistedReducer, composeEnhancers(applyMiddleware()))\r\nlet persistor = persistStore(store)\r\n\r\nexport { store, persistor }","import {createTheme} from \"@material-ui/core\";\r\n\r\nexport default createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store, persistor} from \"./Redux/store\";\nimport { MuiThemeProvider} from \"@material-ui/core\";\nimport darkTheme from \"./Theme/darkTheme\";\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <MuiThemeProvider theme={darkTheme}>\n          <App/>\n        </MuiThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}